import bs4, requests

urlP = 'https://www.fanta.soccer/it/lega/privata/119084/offertapubblica/'
cookies = {
	'ASP.NET_SessionId': 'kyyp1emtd32vgmhmf103wc14',
	'FantaSoccer_Auth': '5C32EA3069EB925167A7E75A5C6EC56EA26D0B71AF66B341AA9622BBCF73AF4FBD96FAB6E0E3942BBD79D3F6E47D11BE8A9BFF7A521AFAC8CDE0932AA6863B67F63C7EBC6ACB856825EE1F14CDCE9DE45BDD5FF881A249B7AD1808A53B73ED2EF20EE4BC48DC857343DA0E20DF40DBB8A6634D73EBB3B4E449ED5EA073A6D6F08C14999D'
}
payload = {
	'ctl00$smFantaSoccer': 'ctl00$MainContent$wuc_OffertaPubblica$upListaSvincolati|ctl00$MainContent$wuc_OffertaPubblica$btnAttaccanti',
	'ctl00$MainContent$wuc_OffertaPubblica$btnAttaccanti': 'ATT',
	'__VIEWSTATE': '/wEPDwUKLTU4NDQ4Njc2Ng9kFgJmD2QWBAIBD2QWBAITDxYCHgRocmVmBR8vY3NzL3N0eWxlLmNzcz9tPTIwMjAwMjA0MDkxNDE5ZAIYDxYCHgRUZXh0BWA8bGluayByZWw9ImNhbm9uaWNhbCIgaHJlZj0iaHR0cHM6Ly93d3cuZmFudGEuc29jY2VyL2l0L2xlZ2EvcHJpdmF0YS8xMTkwODQvb2ZmZXJ0YXB1YmJsaWNhLyIgLz5kAgMPFgIeBmFjdGlvbgUoL2l0L2xlZ2EvcHJpdmF0YS8xMTkwODQvb2ZmZXJ0YXB1YmJsaWNhLxYYAgIPFgIfAQUFRmFsc2VkAgUPDxYCHgdWaXNpYmxlZ2QWAgIDDw8WAh4LTmF2aWdhdGVVcmwFFS9pdC9hY2NvdW50Y29sbGVnYXRpL2RkAgYPDxYEHwQFCi9pdC9sb2dpbi8fA2hkZAIHDw8WBB8BBVg8c3BhbiBjbGFzcz0iaWNvbiB0ZXh0LXByaW1hcnkgZmFzIGZhLXVzZXIiIHN0eWxlPSJtYXJnaW4tcmlnaHQ6IDZweCI+PC9zcGFuPiBtYXJjb21lbGlzHwNnZGQCCA8WAh8BBYABPHNwYW4gY2xhc3M9Im1haWxib3gtYmFkZ2UtY29udGFpbmVyIj4xIDxzcGFuIGNsYXNzPSJtZGkgdGV4dC13aGl0ZSBtZGktZW1haWwgaWNvbi14eHhzIiBzdHlsZT0iZGlzcGxheTogaW5oZXJpdCI+PC9zcGFuPjwvc3Bhbj5kAgkPFgIfA2cWDGYPFgIeC18hSXRlbUNvdW50AgEWAmYPZBYCAgEPDxYGHwEFYTxpbWcgc3JjPSIvSW1hZ2VzL2ljb25hX21sX3NlcmllYV9vbi5wbmciIHN0eWxlPSJtYXJnaW4tcmlnaHQ6IDRweDsgaGVpZ2h0OiAyMHB4OyIgLz5NYW9yaSdzIGNsdWIeB1Rvb2xUaXAFL0xlZ2EgUHJpdmF0YSAoU2VyaWUgQSkgLSBGYW50YW1hc3NlbmEgMjAxOS0yMDIwHwQFOC9pdC9sZWdhL3ByaXZhdGEvMTE5MDg0L2hvbWVsZWdhL2ZhbnRhbWFzc2VuYS0yMDE5LTIwMjAvZGQCAQ8WAh8FZmQCAg8PFgQfAQUvTWFpbGJveCA8c3BhbiBjbGFzcz0idGV4dC1zZWNvbmRhcnkiPigxKTwvc3Bhbj4fBAUML2l0L21haWxib3gvZGQCAw8WAh8BBV88YSBocmVmPSIvaXQvMTM5MjI3L3Byb2ZpbG91dGVudGUvbWFyY29tZWxpcy8iIGNsYXNzPSJyZC1tZWdhbWVudS1saXN0LWxpbmsiPlByb2ZpbG8gdXRlbnRlPC9hPmQCBA8PFgIfBAUqL1ByZW1pdW0vU2Vydml6aVByZW1pdW1VdGVudGUuYXNweD9MYW5nPWl0ZGQCBQ8PFgIfBAURL2l0L21vZGlmaWNhZGF0aS9kZAIKD2QWEAIBDxYCHwEFE0xpZ3VlIDEgLSAyMDE5LzIwMjBkAgMPFgIfAQUkbWVyY29sZWTDrCA1IGZlYmJyYWlvIDIwMjAgb3JlIDE5OjAwZAIFDw8WBB4ISW1hZ2VVcmwFGC9JbWFnZXMvc2N1ZGV0dGkvODk5LnBuZx4NQWx0ZXJuYXRlVGV4dAUFRmFsc2VkZAIHDxYCHwEFCFRvdWxvdXNlZAIJDw8WBB8HBRgvSW1hZ2VzL3NjdWRldHRpLzg5OC5wbmcfCAUFRmFsc2VkZAILDxYCHwEFClN0cmFzYm91cmdkAg0PFgIfAQWFATxkaXYgY2xhc3M9ImNvdW50ZG93biBjb3VudGRvd24tY2xhc3NpYyIgZGF0YS10eXBlPSJ1bnRpbCIgZGF0YS10aW1lPSIwNSBGZWIgMjAyMCAxOTowMCIgZGF0YS1mb3JtYXQ9ImRobXMiIGRhdGEtc3R5bGU9InNob3J0Ij48L2Rpdj5kAg8PDxYCHwQFLS9pdC9zZXJpZWEvNTQ4ODEvcGFydGl0YS90b3Vsb3VzZS1zdHJhc2JvdXJnL2RkAgwPFgIfA2hkAg0PZBYGZg8WAh8BBRZGYW50YW1hc3NlbmEgMjAxOS0yMDIwZAIBDw8WBB8BBQlIb21lIExlZ2EfBAU4L2l0L2xlZ2EvcHJpdmF0YS8xMTkwODQvaG9tZWxlZ2EvZmFudGFtYXNzZW5hLTIwMTktMjAyMC9kZAICDxYCHwEFDE1lcmNhdG8gTGVnYWQCDg8PFgIfA2hkZAIPD2QWBAIBD2QWEmYPZBYCAgEPZBYCAgEPD2QWAh4TZGF0YS1zdGFydC1wb3NpdGlvbgUBNRYyAgEPZBYCZg8PFgIfBAU4L2l0L2xlZ2EvcHJpdmF0YS8xMTkwODQvaG9tZWxlZ2EvZmFudGFtYXNzZW5hLTIwMTktMjAyMC9kZAIDD2QWAmYPDxYCHwQFKi9pdC9sZWdhL3ByaXZhdGEvMTE5MDg0L2NhbGNpYXRvcmkvNTAxNzk3L2RkAgUPZBYCZg8PFgIfBAUjL2l0L2xlZ2EvcHJpdmF0YS8xMTkwODQvY2xhc3NpZmljYS9kZAIHD2QWAmYPDxYCHwQFIy9pdC9sZWdhL3ByaXZhdGEvMTE5MDg0L2NhbGVuZGFyaW8vZGQCCQ9kFgJmDw8WAh8EBScvaXQvbGVnYS9wcml2YXRhLzExOTA4NC9wYXJ0aXRlLzUwMTc5Ny9kZAILD2QWAmYPDxYCHwQFJy9pdC9sZWdhL3ByaXZhdGEvMTE5MDg0L21lcmNhdG8vNTAxNzk3L2RkAg0PZBYCZg8PFgIfBAUoL2l0L2xlZ2EvcHJpdmF0YS8xMTkwODQvb2ZmZXJ0YXB1YmJsaWNhL2RkAg8PZBYCZg8PFgIfBAUnL2l0L2xlZ2EvcHJpdmF0YS8xMTkwODQvb2ZmZXJ0YXByaXZhdGEvZGQCEQ9kFgJmDw8WAh8EBS0vaXQvbGVnYS9wcml2YXRhLzExOTA4NC90cmFzZmVyaW1lbnRpLzUwMTc5Ny9kZAITD2QWAmYPDxYCHwQFMS9pdC9sZWdhL3ByaXZhdGEvMTE5MDg0L2NhbGVuZGFyaW9tZXJjYXRvLzUwMTc5Ny9kZAIVD2QWAmYPDxYCHwQFOS9pdC9sZWdhL3ByaXZhdGEvMTE5MDg0L2NvcHBhbGVnYS9mYW50YW1hc3NlbmEtMjAxOS0yMDIwL2RkAhcPZBYCZg8PFgIfBAUkL2l0L2xlZ2EvcHJpdmF0YS8xMTkwODQvdXRpbGl0eWxlZ2EvZGQCGQ9kFgJmDw8WAh8EBR4vaXQvbGVnYS9wcml2YXRhLzExOTA4NC9zdGF0by9kZAIbD2QWAmYPDxYCHwNoZGQCHQ9kFgJmDw8WBB8EBSsvaXQvbGVnYS9wcml2YXRhLzExOTA4NC9mdW56aW9uaXByZXNpZGVudGUvHwNnZGQCHw9kFgJmDw8WAh8EBScvaXQvbGVnYS9wcml2YXRhLzExOTA4NC9zcXVhZHJhLzUwMTc5Ny9kZAIhD2QWAmYPDxYCHwQFLy9pdC9sZWdhL3ByaXZhdGEvMTE5MDg0L21vZGlmaWNhc3F1YWRyYS81MDE3OTcvZGQCIw9kFgJmDw8WAh8DaGRkAiUPZBYCZg8PFgIfA2hkZAInD2QWAmYPDxYCHwQFKy9pdC9sZWdhL3ByaXZhdGEvMTE5MDg0L3N0YXRpc3RpY2hlLzUwMTc5Ny9kZAIpD2QWAmYPDxYCHwQFIC9pdC9sZWdhL3ByaXZhdGEvMTE5MDg0L3JpY2VyY2EvZGQCKw9kFgJmDw8WAh8EBS8vaXQvbGVnYS9wcml2YXRhLzExOTA4NC9mb3JtYXppb25pbm9uc2NoaWVyYXRlL2RkAi0PZBYCZg8PFgIfBAUdL2l0L2xlZ2EvcHJpdmF0YS9yZWdvbGFtZW50by9kZAIvD2QWAmYPDxYCHwQFKC9pdC9mb3J1bS8xMjA4MDUvZmFudGFtYXNzZW5hLTIwMTktMjAyMC9kZAIxD2QWAmYPDxYCHwQFJC9pdC9sZWdhL3ByaXZhdGEvMTE5MDg0L2VsZW5jb2xlZ2hlL2RkAgEPFgIfAQUBQWQCAg8WAh8BBQEwZAIDDxYCHwEFATBkAgUPZBYCAgEPZBYCZg9kFhwCAQ8PFgIfAQUCNzFkZAICDw8WAh8BBUUgKGRpIGN1aSA8c3Ryb25nIGNsYXNzPSJ0ZXh0LXByaW1hcnkiPjA8L3N0cm9uZz4gaW4gb2ZmZXJ0ZSBpbiBjb3JzbylkZAIGDxYCHwEFN0lEU3F1YWRyYTogPHN0cm9uZyBjbGFzcz0idGV4dC1wcmltYXJ5Ij41MDE3OTc8L3N0cm9uZz5kAggPFgIfAQWIAVByZXNpZGVudGU6IDxzcGFuIGNsYXNzPSJ1dGVudGVfc3RhbmRhcmQiPjxhIGhyZWY9IlByb2ZpbG9VdGVudGUuYXNweD9MYW5nPWl0JmlkdXRlbnRlPTEzOTIyNyZ1c2VybmFtZT1tYXJjb21lbGlzIj5tYXJjb21lbGlzPC9hPjwvc3Bhbj5kAgoPFgIfAQU/QXJlbmE6IDxzdHJvbmcgY2xhc3M9InRleHQtcHJpbWFyeSI+QWxsIEJsYWNrcyBTdGFkaXVtPC9zdHJvbmc+ZAIMDxYCHwEFN1N1cHBvcnRlcnM6IDxzdHJvbmcgY2xhc3M9InRleHQtcHJpbWFyeSI+TWFvcmk8L3N0cm9uZz5kAg4PDxYCHwEFATNkZAIQDw8WAh8DaGRkAhQPDxYCHwEFAThkZAIWDw8WAh8DaGRkAhoPDxYCHwEFAThkZAIcDw8WAh8DaGRkAiAPDxYCHwEFATVkZAIiDw8WBh4IQ3NzQ2xhc3MFEmRpZmV0dG9fY2FsY2lhdG9yaR8BBQItMR4EXyFTQgICFgIeE2RhdGEtb3JpZ2luYWwtdGl0bGUFIUMnw6ggMSBhdHRhY2NhbnRlIGluIG1lbm8gaW4gcm9zYWQCBg8PFgIfAWVkZAIHDw8WAh8DZ2RkAggPDxYCHwEFGE1hb3JpJ3MgY2x1YiAtIGNyZWRpdGk6IGRkAgkPZBYCAgEPZBYCZg9kFgRmD2QWCAIBDw8WBB8KBTFidXR0b24gYnV0dG9uLXNtIGJ1dHRvbi1ydW9sby1vZmZlcnRhIGJ1dHRvbi1ncmF5HwsCAmRkAgMPDxYEHwoFMWJ1dHRvbiBidXR0b24tc20gYnV0dG9uLXJ1b2xvLW9mZmVydGEgYnV0dG9uLWdyYXkfCwICZGQCBQ8PFgQfCgVMYnV0dG9uIGJ1dHRvbi1zbSBidXR0b24tcnVvbG8tb2ZmZXJ0YSBidXR0b24tZ3JheSBidG5DZW50cm9jYW1waXN0aV9zZWxlY3RlZB8LAgJkZAIHDw8WBB8KBTFidXR0b24gYnV0dG9uLXNtIGJ1dHRvbi1ydW9sby1vZmZlcnRhIGJ1dHRvbi1ncmF5HwsCAmRkAgEPFgIfBQJ3Fu4BZg9kFhoCAQ8WBB4FY2xhc3MFKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR4RZGF0YS1maWx0ZXItdmFsdWUFDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggeBXN0eWxlBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQ0LnBuZyk7HgtkYXRhLXRvZ2dsZQUHdG9vbHRpcB4FdGl0bGVlHwwFBUludGVyZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVQYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvOTU4NzEucG5nKTtkAggPFQEHRXJpa3NlbmQCCQ8WAh8BBXU8YSBocmVmPSIvaXQvc2VyaWVhLzE5ODI4L2NhbGNpYXRvcmUvZXJpa3Nlbi8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+RXJpa3NlbiBDLjwvYT5kAgsPDxYCHwcFHi9JbWFnZXMvYmFuZGllcmUvRGFuaW1hcmNhLmdpZhYCHwwFCURhbmltYXJjYWQCDQ8WAh8BBQdJTlQtbWlsZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgExAjMzZAITDw8WAh4HRW5hYmxlZGhkZAIXDw8WBh4PQ29tbWFuZEFyZ3VtZW50BQcxMDE5ODI4Hg1PbkNsaWVudENsaWNrBWpqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIEVyaWtzZW4gQy4/Jyk7HxJoZGQCAQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQxLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUEUm9tYWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVQYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvNTkwMTcucG5nKTtkAggPFQEHUGVyb3R0aWQCCQ8WAh8BBXU8YSBocmVmPSIvaXQvc2VyaWVhLzE2MTI4L2NhbGNpYXRvcmUvcGVyb3R0aS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+UGVyb3R0aSBELjwvYT5kAgsPDxYCHwcFHi9JbWFnZXMvYmFuZGllcmUvQXJnZW50aW5hLmdpZhYCHwwFCUFyZ2VudGluYWQCDQ8WAh8BBQdST00tYm9sZAIPDxYCHwEFBDYsMDlkAhEPFgIfAQUENywxNGQCEg8VAgIxMAIyMGQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE2MTI4HxQFamphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgUGVyb3R0aSBELj8nKTsfEmhkZAICD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDAucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQVNaWxhbmQCBQ8PFgQfCgUfc3RhdG9fY2FsY2lhdG9yZSBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzMxOTAyMy5wbmcpO2QCCA8VAQZLZXNzaWVkAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS81MDcwNy9jYWxjaWF0b3JlL2tlc3NpZS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+S2Vzc2llIEYuPC9hPmQCCw8PFgIfBwUjL0ltYWdlcy9iYW5kaWVyZS9Db3N0YV9kX2F2b3Jpby5naWYWAh8MBQ5Db3N0YSBkJ2F2b3Jpb2QCDQ8WAh8BBQdpbnQtTUlMZAIPDxYCHwEFBDUsNTNkAhEPFgIfAQUENSw2OWQCEg8VAgIxOQIxOWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDUwNzA3HxQFaWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgS2Vzc2llIEYuPycpOx8SaGRkAgMPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFCVNhbXBkb3JpYWQCBQ8PFgQfCgUfc3RhdG9fY2FsY2lhdG9yZSBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCBw8PZBYCHw8FUGJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzkxNzIyLnBuZyk7ZAIIDxUBB1JhbWlyZXpkAgkPFgIfAQV1PGEgaHJlZj0iL2l0L3NlcmllYS8xODAxMS9jYWxjaWF0b3JlL3JhbWlyZXovIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPlJhbWlyZXogRy48L2E+ZAILDw8WAh8HBRwvSW1hZ2VzL2JhbmRpZXJlL1VydWd1YXkuZ2lmFgIfDAUHVXJ1Z3VheWQCDQ8WAh8BBQd0b3ItU0FNZAIPDxYCHwEFBDUsNzVkAhEPFgIfAQUENiw1OGQCEg8VAgIxMwIxOWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE4MDExHxQFamphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgUmFtaXJleiBHLj8nKTsfEmhkZAIED2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNTEucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQVMZWNjZWQCBQ8PFgQfCgUfc3RhdG9fY2FsY2lhdG9yZSBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCBw8PZBYCHw8FT2JvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzk5NDQucG5nKTtkAggPFQEHTWFuY29zdWQCCQ8WAh8BBXU8YSBocmVmPSIvaXQvc2VyaWVhLzY4NDc4L2NhbGNpYXRvcmUvbWFuY29zdS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+TWFuY29zdSBNLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQduYXAtTEVDZAIPDxYCHwEFBDUsOTdkAhEPFgIfAQUENywwOWQCEg8VAgIxNwIxOGQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDY4NDc4HxQFamphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgTWFuY29zdSBNLj8nKTsfEmhkZAIFD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNzYucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQVHZW5vYWQCBQ8PFgQfCgUfc3RhdG9fY2FsY2lhdG9yZSBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCBw8PZBYCHw8FT2JvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzQwNzIucG5nKTtkAggPFQEGUGFuZGV2ZAIJDxYCHwEFczxhIGhyZWY9Ii9pdC9zZXJpZWEvMTgyNTkvY2FsY2lhdG9yZS9wYW5kZXYvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPlBhbmRldiBHLjwvYT5kAgsPDxYCHwcFIi9JbWFnZXMvYmFuZGllcmUvTWFjZWRvbmlhX0ZZUi5naWYWAh8MBQ1NYWNlZG9uaWEgRllSZAINDxYCHwEFB0dFTi1jYWdkAg8PFgIfAQUENiwwNGQCEQ8WAh8BBQQ3LDAwZAISDxUCAjE0AjE4ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMTgyNTkfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBQYW5kZXYgRy4/Jyk7HxJoZGQCBg9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjU5LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUKRmlvcmVudGluYWQCBQ8PFgQfCgUfc3RhdG9fY2FsY2lhdG9yZSBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzIxODE1My5wbmcpO2QCCA8VAQdCZW5hc3NpZAIJDxYCHwEFdTxhIGhyZWY9Ii9pdC9zZXJpZWEvMzgwNDUvY2FsY2lhdG9yZS9iZW5hc3NpLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5CZW5hc3NpIE0uPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAINDxYCHwEFB0ZJTy1hdGFkAg8PFgIfAQUENSw4NmQCEQ8WAh8BBQQ2LDIzZAISDxUCAjEzAjE3ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMzgwNDUfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBCZW5hc3NpIE0uPycpOx8SaGRkAgcPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0OS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFB0JvbG9nbmFkAgUPDxYEHwoFI3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tc3F1YWxpZmljYXRvHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUMc3F1YWxpZmljYXRvZAIHDw9kFgIfDwVQYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMTc3ODcucG5nKTtkAggPFQEEUG9saWQCCQ8WAh8BBW88YSBocmVmPSIvaXQvc2VyaWVhLzE3ODcyL2NhbGNpYXRvcmUvcG9saS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+UG9saSBBLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdyb20tQk9MZAIPDxYCHwEFBDYsMjRkAhEPFgIfAQUENiw1NWQCEg8VAgIyMAIxN2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE3ODcyHxQFZ2phdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgUG9saSBBLj8nKTsfEmhkZAIID2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDYucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQdVZGluZXNlZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMjE1NjQwLnBuZyk7ZAIIDxUBBkZvZmFuYWQCCQ8WAh8BBXM8YSBocmVmPSIvaXQvc2VyaWVhLzUwODk1L2NhbGNpYXRvcmUvZm9mYW5hLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5Gb2ZhbmEgUy48L2E+ZAILDw8WAh8HBSMvSW1hZ2VzL2JhbmRpZXJlL0Nvc3RhX2RfYXZvcmlvLmdpZhYCHwwFDkNvc3RhIGQnYXZvcmlvZAINDxYCHwEFB2JyZS1VRElkAg8PFgIfAQUENiwwN2QCEQ8WAh8BBQQ2LDU3ZAISDxUCAjE3AjE2ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNTA4OTUfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBGb2ZhbmEgUy4/Jyk7HxJoZGQCCQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjY4LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUGVG9yaW5vZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVQYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvNTI2NDUucG5nKTtkAggPFQEGUmluY29uZAIJDxYCHwEFczxhIGhyZWY9Ii9pdC9zZXJpZWEvMTczODQvY2FsY2lhdG9yZS9yaW5jb24vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPlJpbmNvbiBULjwvYT5kAgsPDxYCHwcFHi9JbWFnZXMvYmFuZGllcmUvVmVuZXp1ZWxhLmdpZhYCHwwFCVZlbmV6dWVsYWQCDQ8WAh8BBQdUT1Itc2FtZAIPDxYCHwEFBDYsMjRkAhEPFgIfAQUENiwzMmQCEg8VAgIxOAIxNmQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE3Mzg0HxQFaWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgUmluY29uIFQuPycpOx8SaGRkAgoPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI3Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFDUhlbGxhcyBWZXJvbmFkAgUPDxYEHwoFH3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgcPD2QWAh8PBVBib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS80NTYxMi5wbmcpO2QCCA8VAQdMYXpvdmljZAIJDxYCHwEFdTxhIGhyZWY9Ii9pdC9zZXJpZWEvMjQxMzIvY2FsY2lhdG9yZS9sYXpvdmljLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5MYXpvdmljIEQuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9TZXJiaWEuZ2lmFgIfDAUGU2VyYmlhZAINDxYCHwEFB0hFTC1qdXZkAg8PFgIfAQUENiwzOGQCEQ8WAh8BBQQ2LDcyZAISDxUCAjIxAjE2ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMjQxMzIfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBMYXpvdmljIEQuPycpOx8SaGRkAgsPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI3Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFDUhlbGxhcyBWZXJvbmFkAgUPDxYEHwoFH3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgcPD2QWAh8PBVBib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8xNjU5MS5wbmcpO2QCCA8VAQ1NaWd1ZWwgVmVsb3NvZAIJDxYCHwEFfzxhIGhyZWY9Ii9pdC9zZXJpZWEvMTgyODIvY2FsY2lhdG9yZS9taWd1ZWxfdmVsb3NvLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5NaWd1ZWwgVmVsb3NvIDwvYT5kAgsPDxYCHwcFHy9JbWFnZXMvYmFuZGllcmUvUG9ydG9nYWxsby5naWYWAh8MBQpQb3J0b2dhbGxvZAINDxYCHwEFB0hFTC1qdXZkAg8PFgIfAQUENiwzNWQCEQ8WAh8BBQQ2LDc5ZAISDxUCAjE4AjE2ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMTgyODIfFAVuamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBNaWd1ZWwgVmVsb3NvID8nKTsfEmhkZAIMD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDcucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQlTYW1wZG9yaWFkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzIxMzkwOS5wbmcpO2QCCA8VAQdMaW5ldHR5ZAIJDxYCHwEFdTxhIGhyZWY9Ii9pdC9zZXJpZWEvMzg0ODAvY2FsY2lhdG9yZS9saW5ldHR5LyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5MaW5ldHR5IEsuPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9Qb2xvbmlhLmdpZhYCHwwFB1BvbG9uaWFkAg0PFgIfAQUHdG9yLVNBTWQCDw8WAh8BBQQ1LDkyZAIRDxYCHwEFBDYsNTRkAhIPFQICMTQCMTVkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTAzODQ4MB8UBWpqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIExpbmV0dHkgSy4/Jyk7HxJoZGQCDQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS81NjgxLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUIU2Fzc3VvbG9kAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzExNjM3Ny5wbmcpO2QCCA8VAQhEanVyaWNpY2QCCQ8WAh8BBXc8YSBocmVmPSIvaXQvc2VyaWVhLzI5NzY5L2NhbGNpYXRvcmUvZGp1cmljaWMvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkRqdXJpY2ljIEYuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9TZXJiaWEuZ2lmFgIfDAUGU2VyYmlhZAINDxYCHwEFB3NwYS1TQVNkAg8PFgIfAQUENSw5NmQCEQ8WAh8BBQQ2LDczZAISDxUCAjE0AjE1ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMjk3NjkfFAVramF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBEanVyaWNpYyBGLj8nKTsfEmhkZAIOD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNTYucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQhDYWdsaWFyaWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvbm9mb3RvLnBuZyk7ZAIIDxUBB1BlcmVpcm9kAgkPFgIfAQV1PGEgaHJlZj0iL2l0L3NlcmllYS81MTcwOC9jYWxjaWF0b3JlL3BlcmVpcm8vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPlBlcmVpcm8gRy48L2E+ZAILDw8WAh8HBRwvSW1hZ2VzL2JhbmRpZXJlL1VydWd1YXkuZ2lmFgIfDAUHVXJ1Z3VheWQCDQ8WAh8BBQdnZW4tQ0FHZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgEwAjE1ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNTE3MDgfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBQZXJlaXJvIEcuPycpOx8SaGRkAg8PZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0NC5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBUludGVyZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8xMjEyODkucG5nKTtkAggPFQEGVmVjaW5vZAIJDxYCHwEFczxhIGhyZWY9Ii9pdC9zZXJpZWEvMzk1MjkvY2FsY2lhdG9yZS92ZWNpbm8vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPlZlY2lubyBNLjwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvVXJ1Z3VheS5naWYWAh8MBQdVcnVndWF5ZAINDxYCHwEFB0lOVC1taWxkAg8PFgIfAQUENiwwNGQCEQ8WAh8BBQQ2LDI3ZAISDxUCAjE0AjE1ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMzk1MjkfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBWZWNpbm8gTS4/Jyk7HxJoZGQCEA9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQ0LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFSW50ZXJkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FT2JvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzI1NTMucG5nKTtkAggPFQEFWW91bmdkAgkPFgIfAQVxPGEgaHJlZj0iL2l0L3NlcmllYS8xNjY1OC9jYWxjaWF0b3JlL3lvdW5nLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5Zb3VuZyBBLjwvYT5kAgsPDxYCHwcFIC9JbWFnZXMvYmFuZGllcmUvSW5naGlsdGVycmEuZ2lmFgIfDAULSW5naGlsdGVycmFkAg0PFgIfAQUHSU5ULW1pbGQCDw8WAh8BBQQ2LDUwZAIRDxYCHwEFBDcsNTBkAhIPFQIBMgIxM2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE2NjU4HxQFaGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgWW91bmcgQS4/Jyk7HxJoZGQCEQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQ0LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFSW50ZXJkAgUPDxYEHwoFJHN0YXRvX2NhbGNpYXRvcmUgc3RhdG8taW5kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFDWluZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8yNzU0NDMucG5nKTtkAggPFQELR2FnbGlhcmRpbmlkAgkPFgIfAQV9PGEgaHJlZj0iL2l0L3NlcmllYS8zODk2NC9jYWxjaWF0b3JlL2dhZ2xpYXJkaW5pLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5HYWdsaWFyZGluaSBSLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdJTlQtbWlsZAIPDxYCHwEFBDYsMThkAhEPFgIfAQUENiw2NGQCEg8VAgIxMQIxM2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDM4OTY0HxQFbmphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgR2FnbGlhcmRpbmkgUi4/Jyk7HxJoZGQCEg9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQ0LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFSW50ZXJkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUGJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzI1Mzk1LnBuZyk7ZAIIDxUBBU1vc2VzZAIJDxYCHwEFcTxhIGhyZWY9Ii9pdC9zZXJpZWEvMTcwODUvY2FsY2lhdG9yZS9tb3Nlcy8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+TW9zZXMgVi48L2E+ZAILDw8WAh8HBRwvSW1hZ2VzL2JhbmRpZXJlL05pZ2VyaWEuZ2lmFgIfDAUHTmlnZXJpYWQCDQ8WAh8BBQdJTlQtbWlsZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgExAjEzZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMTcwODUfFAVoamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBNb3NlcyBWLj8nKTsfEmhkZAITD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDIucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQhKdXZlbnR1c2QCBQ8PFgQfCgUfc3RhdG9fY2FsY2lhdG9yZSBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCBw8PZBYCHw8FUGJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzYxNDE0LnBuZyk7ZAIIDxUBCEN1YWRyYWRvZAIJDxYCHwEFdzxhIGhyZWY9Ii9pdC9zZXJpZWEvMTgwMzUvY2FsY2lhdG9yZS9jdWFkcmFkby8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+Q3VhZHJhZG8gSi48L2E+ZAILDw8WAh8HBR0vSW1hZ2VzL2JhbmRpZXJlL0NvbG9tYmlhLmdpZhYCHwwFCENvbG9tYmlhZAINDxYCHwEFB2hlbC1KVVZkAg8PFgIfAQUENiwwOGQCEQ8WAh8BBQQ1LDk3ZAISDxUCAjE5AjEzZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMTgwMzUfFAVramF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBDdWFkcmFkbyBKLj8nKTsfEmhkZAIUD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNzcucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQ1IZWxsYXMgVmVyb25hZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMTYyNjcwLnBuZyk7ZAIIDxUBBVZlcnJlZAIJDxYCHwEFcTxhIGhyZWY9Ii9pdC9zZXJpZWEvMTc3ODgvY2FsY2lhdG9yZS92ZXJyZS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+VmVycmUgVi48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHSEVMLWp1dmQCDw8WAh8BBQQ2LDIxZAIRDxYCHwEFBDYsNjJkAhIPFQICMTkCMTNkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTAxNzc4OB8UBWhqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIFZlcnJlIFYuPycpOx8SaGRkAhUPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI1MC5wbmcpOx8QBQd0b29sdGlwHxFlHwwFB0JyZXNjaWFkAgUPDxYEHwoFH3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgcPD2QWAh8PBVBib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS84NjEyNi5wbmcpO2QCCA8VAQdSw7RtdWxvZAIJDxYCHwEFczxhIGhyZWY9Ii9pdC9zZXJpZWEvMTgxOTAvY2FsY2lhdG9yZS9yw7RtdWxvLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5Sw7RtdWxvIDwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdCUkUtdWRpZAIPDxYCHwEFBDUsNzVkAhEPFgIfAQUENiwwNWQCEg8VAgIyMQIxM2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE4MTkwHxQFaGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgUsO0bXVsbyA/Jyk7HxJoZGQCFg9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQ3LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUJU2FtcGRvcmlhZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMzkxMDg3LnBuZyk7ZAIIDxUBBkphbmt0b2QCCQ8WAh8BBXM8YSBocmVmPSIvaXQvc2VyaWVhLzQ5NjkwL2NhbGNpYXRvcmUvamFua3RvLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5KYW5rdG8gSi48L2E+ZAILDw8WAh8HBSQvSW1hZ2VzL2JhbmRpZXJlL1JlcHViYmxpY2FfQ2VjYS5naWYWAh8MBQ9SZXB1YmJsaWNhIENlY2FkAg0PFgIfAQUHdG9yLVNBTWQCDw8WAh8BBQQ1LDgzZAIRDxYCHwEFBDYsMzdkAhIPFQICMTYCMTJkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA0OTY5MB8UBWlqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIEphbmt0byBKLj8nKTsfEmhkZAIXD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNTYucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQhDYWdsaWFyaWQCBQ8PFgQfCgUjc3RhdG9fY2FsY2lhdG9yZSBzdGF0by1zcXVhbGlmaWNhdG8fCwICFgYfEAUHdG9vbHRpcB8RZR8MBQxzcXVhbGlmaWNhdG9kAgcPD2QWAh8PBU9ib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS80Mjk1LnBuZyk7ZAIIDxUBCENpZ2FyaW5pZAIJDxYCHwEFdzxhIGhyZWY9Ii9pdC9zZXJpZWEvMTgxMzUvY2FsY2lhdG9yZS9jaWdhcmluaS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+Q2lnYXJpbmkgTC48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHZ2VuLUNBR2QCDw8WAh8BBQQ2LDAwZAIRDxYCHwEFBDYsMDZkAhIPFQICMTcCMTJkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTAxODEzNR8UBWtqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIENpZ2FyaW5pIEwuPycpOx8SaGRkAhgPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI3MC5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBk5hcG9saWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvbm9mb3RvLnBuZyk7ZAIIDxUBB0xvYm90a2FkAgkPFgIfAQV1PGEgaHJlZj0iL2l0L3NlcmllYS80NDA5MC9jYWxjaWF0b3JlL2xvYm90a2EvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkxvYm90a2EgUy48L2E+ZAILDw8WAh8HBR8vSW1hZ2VzL2JhbmRpZXJlL1Nsb3ZhY2NoaWEuZ2lmFgIfDAUKU2xvdmFjY2hpYWQCDQ8WAh8BBQdOQVAtbGVjZAIPDxYCHwEFBDYsNTBkAhEPFgIfAQUENiw1MGQCEg8VAgEyAjEyZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNDQwOTAfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBMb2JvdGthIFMuPycpOx8SaGRkAhkPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0NS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBUxhemlvZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8xNTE4NzcucG5nKTtkAggPFQEESm9ueWQCCQ8WAh8BBW08YSBocmVmPSIvaXQvc2VyaWVhLzUxNzM4L2NhbGNpYXRvcmUvam9ueS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+Sm9ueSA8L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL1NwYWduYS5naWYWAh8MBQZTcGFnbmFkAg0PFgIfAQUHcGFyLUxBWmQCDw8WAh8BBQQ1LDgwZAIRDxYCHwEFBDUsOTBkAhIPFQIBNwIxMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDUxNzM4HxQFZWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgSm9ueSA/Jyk7HxJoZGQCGg9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjc3LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUNSGVsbGFzIFZlcm9uYWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMjc5NzIwLnBuZyk7ZAIIDxUBCFphY2NhZ25pZAIJDxYCHwEFdzxhIGhyZWY9Ii9pdC9zZXJpZWEvNDMxNzcvY2FsY2lhdG9yZS96YWNjYWduaS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+WmFjY2FnbmkgTS48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHSEVMLWp1dmQCDw8WAh8BBQQ2LDE4ZAIRDxYCHwEFBDYsNDRkAhIPFQICMTkCMTFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA0MzE3Nx8UBWtqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIFphY2NhZ25pIE0uPycpOx8SaGRkAhsPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI3Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFDUhlbGxhcyBWZXJvbmFkAgUPDxYEHwoFH3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8zMTkwNTQucG5nKTtkAggPFQEHQW1yYWJhdGQCCQ8WAh8BBXU8YSBocmVmPSIvaXQvc2VyaWVhLzYzMDcxL2NhbGNpYXRvcmUvYW1yYWJhdC8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+QW1yYWJhdCBTLjwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvTWFyb2Njby5naWYWAh8MBQdNYXJvY2NvZAINDxYCHwEFB0hFTC1qdXZkAg8PFgIfAQUENiw1OGQCEQ8WAh8BBQQ2LDM3ZAISDxUCAjIwAjEwZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNjMwNzEfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBBbXJhYmF0IFMuPycpOx8SaGRkAhwPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFCVNhbXBkb3JpYWQCBQ8PFgQfCgUfc3RhdG9fY2FsY2lhdG9yZSBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCBw8PZBYCHw8FUGJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzIxMDkwLnBuZyk7ZAIIDxUBBUVrZGFsZAIJDxYCHwEFcTxhIGhyZWY9Ii9pdC9zZXJpZWEvMTgxNjMvY2FsY2lhdG9yZS9la2RhbC8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+RWtkYWwgQS48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL1N2ZXppYS5naWYWAh8MBQZTdmV6aWFkAg0PFgIfAQUHdG9yLVNBTWQCDw8WAh8BBQQ1LDcyZAIRDxYCHwEFBDUsNjRkAhIPFQICMTkCMTBkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTAxODE2Mx8UBWhqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIEVrZGFsIEEuPycpOx8SaGRkAh0PZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0MC5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBU1pbGFuZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMjE0Mzc0LnBuZyk7ZAIIDxUBD1NhbXUgQ2FzdGlsbGVqb2QCCQ8WAh8BBYMBPGEgaHJlZj0iL2l0L3NlcmllYS80ODIzOS9jYWxjaWF0b3JlL3NhbXVfY2FzdGlsbGVqby8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+U2FtdSBDYXN0aWxsZWpvIDwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvU3BhZ25hLmdpZhYCHwwFBlNwYWduYWQCDQ8WAh8BBQdpbnQtTUlMZAIPDxYCHwEFBDYsMjFkAhEPFgIfAQUENiwyOWQCEg8VAgIxMAIxMGQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDQ4MjM5HxQFcGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgU2FtdSBDYXN0aWxsZWpvID8nKTsfEmhkZAIeD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDAucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQVNaWxhbmQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvbm9mb3RvLnBuZyk7ZAIIDxUBDFNhZWxlbWFla2Vyc2QCCQ8WAh8BBX88YSBocmVmPSIvaXQvc2VyaWVhLzY1OTg2L2NhbGNpYXRvcmUvc2FlbGVtYWVrZXJzLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5TYWVsZW1hZWtlcnMgQS48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0JlbGdpby5naWYWAh8MBQZCZWxnaW9kAg0PFgIfAQUHaW50LU1JTGQCDw8WAh8BBQQwLDAwZAIRDxYCHwEFBDAsMDBkAhIPFQIBMAIxMGQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDY1OTg2HxQFb2phdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgU2FlbGVtYWVrZXJzIEEuPycpOx8SaGRkAh8PZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0MC5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBU1pbGFuZAIFDw8WBB8KBSRzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWluZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQ1pbmRpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMjg2MzIzLnBuZyk7ZAIIDxUBBktydW5pY2QCCQ8WAh8BBXM8YSBocmVmPSIvaXQvc2VyaWVhLzUxMjE3L2NhbGNpYXRvcmUva3J1bmljLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5LcnVuaWMgUi48L2E+ZAILDw8WAh8HBSYvSW1hZ2VzL2JhbmRpZXJlL0Jvc25pYS1FcnplZ292aW5hLmdpZhYCHwwFEUJvc25pYS1FcnplZ292aW5hZAINDxYCHwEFB2ludC1NSUxkAg8PFgIfAQUENSw5M2QCEQ8WAh8BBQQ1LDg2ZAISDxUCATkBOWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDUxMjE3HxQFaWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgS3J1bmljIFIuPycpOx8SaGRkAiAPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0My5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBVBhcm1hZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMTgwODg5LnBuZyk7ZAIIDxUBB0hlcm5hbmlkAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS82MTY0My9jYWxjaWF0b3JlL2hlcm5hbmkvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkhlcm5hbmkgPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9CcmFzaWxlLmdpZhYCHwwFB0JyYXNpbGVkAg0PFgIfAQUHUEFSLWxhemQCDw8WAh8BBQQ1LDgzZAIRDxYCHwEFBDUsNzVkAhIPFQICMjEBOWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDYxNjQzHxQFaGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgSGVybmFuaSA/Jyk7HxJoZGQCIQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjcwLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUGTmFwb2xpZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMTQxMjI2LnBuZyk7ZAIIDxUBBURlbW1lZAIJDxYCHwEFcTxhIGhyZWY9Ii9pdC9zZXJpZWEvNTk1NjUvY2FsY2lhdG9yZS9kZW1tZS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+RGVtbWUgRC48L2E+ZAILDw8WAh8HBR0vSW1hZ2VzL2JhbmRpZXJlL0dlcm1hbmlhLmdpZhYCHwwFCEdlcm1hbmlhZAINDxYCHwEFB05BUC1sZWNkAg8PFgIfAQUENiwwMGQCEQ8WAh8BBQQ1LDUwZAISDxUCATMBOWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDU5NTY1HxQFaGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgRGVtbWUgRC4/Jyk7HxJoZGQCIg9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjUwLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUHQnJlc2NpYWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVPYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvNzgwMC5wbmcpO2QCCA8VAQlCamFybmFzb25kAgkPFgIfAQV5PGEgaHJlZj0iL2l0L3NlcmllYS8xOTE4OS9jYWxjaWF0b3JlL2JqYXJuYXNvbi8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+Qmphcm5hc29uIEIuPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9Jc2xhbmRhLmdpZhYCHwwFB0lzbGFuZGFkAg0PFgIfAQUHQlJFLXVkaWQCDw8WAh8BBQQwLDAwZAIRDxYCHwEFBDAsMDBkAhIPFQIBMAE4ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMTkxODkfFAVsamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBCamFybmFzb24gQi4/Jyk7HxJoZGQCIw9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjY4LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUGVG9yaW5vZAIFDw8WBB8KBSRzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWluZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQ1pbmRpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMjAxMTU0LnBuZyk7ZAIIDxUBB0Jhc2VsbGlkAgkPFgIfAQV1PGEgaHJlZj0iL2l0L3NlcmllYS8yMTE5NC9jYWxjaWF0b3JlL2Jhc2VsbGkvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkJhc2VsbGkgRC48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHVE9SLXNhbWQCDw8WAh8BBQQ1LDkwZAIRDxYCHwEFBDUsOTNkAhIPFQICMTUBOGQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDIxMTk0HxQFamphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQmFzZWxsaSBELj8nKTsfEmhkZAIkD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDMucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQVQYXJtYWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMTAzMTIwLnBuZyk7ZAIIDxUBB0JydWdtYW5kAgkPFgIfAQV1PGEgaHJlZj0iL2l0L3NlcmllYS8yMDkzNC9jYWxjaWF0b3JlL2JydWdtYW4vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkJydWdtYW4gRy48L2E+ZAILDw8WAh8HBRwvSW1hZ2VzL2JhbmRpZXJlL1VydWd1YXkuZ2lmFgIfDAUHVXJ1Z3VheWQCDQ8WAh8BBQdQQVItbGF6ZAIPDxYCHwEFBDUsNzBkAhEPFgIfAQUENSw3MGQCEg8VAgIxMQE4ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMjA5MzQfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBCcnVnbWFuIEcuPycpOx8SaGRkAiUPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0MS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBFJvbWFkAgUPDxYEHwoFJHN0YXRvX2NhbGNpYXRvcmUgc3RhdG8taW5kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFDWluZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8zOTYxNTUucG5nKTtkAggPFQEHRGlhd2FyYWQCCQ8WAh8BBXU8YSBocmVmPSIvaXQvc2VyaWVhLzUxMjE5L2NhbGNpYXRvcmUvZGlhd2FyYS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+RGlhd2FyYSBBLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvR3VpbmVhLmdpZhYCHwwFBkd1aW5lYWQCDQ8WAh8BBQdST00tYm9sZAIPDxYCHwEFBDYsMjNkAhEPFgIfAQUENiwwOWQCEg8VAgIxMQE4ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNTEyMTkfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBEaWF3YXJhIEEuPycpOx8SaGRkAiYPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0OS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFB0JvbG9nbmFkAgUPDxYEHwoFH3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS9ub2ZvdG8ucG5nKTtkAggPFQEJRG9taW5ndWV6ZAIJDxYCHwEFeTxhIGhyZWY9Ii9pdC9zZXJpZWEvNzcwNzUvY2FsY2lhdG9yZS9kb21pbmd1ZXovIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkRvbWluZ3VleiBOLjwvYT5kAgsPDxYCHwcFHi9JbWFnZXMvYmFuZGllcmUvQXJnZW50aW5hLmdpZhYCHwwFCUFyZ2VudGluYWQCDQ8WAh8BBQdyb20tQk9MZAIPDxYCHwEFBDYsMDBkAhEPFgIfAQUENiwwMGQCEg8VAgExAThkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA3NzA3NR8UBWxqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIERvbWluZ3VleiBOLj8nKTsfEmhkZAInD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNTEucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQVMZWNjZWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVQYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvNzQzNzQucG5nKTtkAggPFQEHU2hha2hvdmQCCQ8WAh8BBXU8YSBocmVmPSIvaXQvc2VyaWVhLzI0NzI0L2NhbGNpYXRvcmUvc2hha2hvdi8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+U2hha2hvdiBFLjwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvVWNyYWluYS5naWYWAh8MBQdVY3JhaW5hZAINDxYCHwEFB25hcC1MRUNkAg8PFgIfAQUENSw2NGQCEQ8WAh8BBQQ1LDczZAISDxUCAjEzAThkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTAyNDcyNB8UBWpqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIFNoYWtob3YgRS4/Jyk7HxJoZGQCKA9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjU1LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUIQXRhbGFudGFkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpL25vZm90by5wbmcpO2QCCA8VAQZUYW1lemVkAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS8zOTQ2OC9jYWxjaWF0b3JlL3RhbWV6ZS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+VGFtZXplIEEuPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9GcmFuY2lhLmdpZhYCHwwFB0ZyYW5jaWFkAg0PFgIfAQUHZmlvLUFUQWQCDw8WAh8BBQQwLDAwZAIRDxYCHwEFBDAsMDBkAhIPFQIBMAE3ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMzk0NjgfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBUYW1lemUgQS4/Jyk7HxJoZGQCKQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQzLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFUGFybWFkAgUPDxYEHwoFH3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgcPD2QWAh8PBU9ib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS80MzcyLnBuZyk7ZAIIDxUBB0JhcmlsbGFkAgkPFgIfAQV1PGEgaHJlZj0iL2l0L3NlcmllYS8yMDgxNC9jYWxjaWF0b3JlL2JhcmlsbGEvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkJhcmlsbGEgQS48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHUEFSLWxhemQCDw8WAh8BBQQ1LDg4ZAIRDxYCHwEFBDUsOTFkAhIPFQICMTcBN2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDIwODE0HxQFamphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQmFyaWxsYSBBLj8nKTsfEmhkZAIqD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNTAucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQdCcmVzY2lhZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8yOTU3NDgucG5nKTtkAggPFQEGU3BhbGVrZAIJDxYCHwEFczxhIGhyZWY9Ii9pdC9zZXJpZWEvNDc1MTcvY2FsY2lhdG9yZS9zcGFsZWsvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPlNwYWxlayBOLjwvYT5kAgsPDxYCHwcFHy9JbWFnZXMvYmFuZGllcmUvU2xvdmFjY2hpYS5naWYWAh8MBQpTbG92YWNjaGlhZAINDxYCHwEFB0JSRS11ZGlkAg8PFgIfAQUENSw2MmQCEQ8WAh8BBQQ1LDg1ZAISDxUCAjE0ATdkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA0NzUxNx8UBWlqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIFNwYWxlayBOLj8nKTsfEmhkZAIrD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNTAucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQdCcmVzY2lhZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMjYzODQ0LnBuZyk7ZAIIDxUBBkJpc29saWQCCQ8WAh8BBXM8YSBocmVmPSIvaXQvc2VyaWVhLzYwMzk1L2NhbGNpYXRvcmUvYmlzb2xpLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5CaXNvbGkgRC48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHQlJFLXVkaWQCDw8WAh8BBQQ1LDkwZAIRDxYCHwEFBDUsODNkAhIPFQICMjEBN2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDYwMzk1HxQFaWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQmlzb2xpIEQuPycpOx8SaGRkAiwPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvNTY4MS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFCFNhc3N1b2xvZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVBib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS81ODU1OS5wbmcpO2QCCA8VAQpNYWduYW5lbGxpZAIJDxYCHwEFezxhIGhyZWY9Ii9pdC9zZXJpZWEvMjE0MTgvY2FsY2lhdG9yZS9tYWduYW5lbGxpLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5NYWduYW5lbGxpIEYuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAINDxYCHwEFB3NwYS1TQVNkAg8PFgIfAQUENiwwNWQCEQ8WAh8BBQQ1LDg2ZAISDxUCAjExATdkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTAyMTQxOB8UBW1qYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIE1hZ25hbmVsbGkgRi4/Jyk7HxJoZGQCLQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjg3LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUEU1BBTGQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMzc2ODQzLnBuZyk7ZAIIDxUBBk11cmdpYWQCCQ8WAh8BBXM8YSBocmVmPSIvaXQvc2VyaWVhLzQ5NDAzL2NhbGNpYXRvcmUvbXVyZ2lhLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5NdXJnaWEgQS48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHU1BBLXNhc2QCDw8WAh8BBQQ1LDY1ZAIRDxYCHwEFBDUsNjVkAhIPFQICMTQBN2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDQ5NDAzHxQFaWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgTXVyZ2lhIEEuPycpOx8SaGRkAi4PZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI4Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBFNQQUxkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzE2MjQ5Mi5wbmcpO2QCCA8VAQZWYWxvdGlkAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS8xNzc1NC9jYWxjaWF0b3JlL3ZhbG90aS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+VmFsb3RpIE0uPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAINDxYCHwEFB1NQQS1zYXNkAg8PFgIfAQUENSw4M2QCEQ8WAh8BBQQ2LDEzZAISDxUCAjE2ATdkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTAxNzc1NB8UBWlqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIFZhbG90aSBNLj8nKTsfEmhkZAIvD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyODcucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQRTUEFMZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvNDQ5MDQyLnBuZyk7ZAIIDxUBBkVzcGV0b2QCCQ8WAh8BBXE8YSBocmVmPSIvaXQvc2VyaWVhLzYyMzc2L2NhbGNpYXRvcmUvZXNwZXRvLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5Fc3BldG8gPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9CcmFzaWxlLmdpZhYCHwwFB0JyYXNpbGVkAg0PFgIfAQUHU1BBLXNhc2QCDw8WAh8BBQQ2LDE5ZAIRDxYCHwEFBDYsMzRkAhIPFQICMTcBNmQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDYyMzc2HxQFZ2phdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgRXNwZXRvID8nKTsfEmhkZAIwD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzU2ODEucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQhTYXNzdW9sb2QCBQ8PFgQfCgUfc3RhdG9fY2FsY2lhdG9yZSBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzEzODA0NS5wbmcpO2QCCA8VAQxQZWRybyBPYmlhbmdkAgkPFgIfAQV9PGEgaHJlZj0iL2l0L3NlcmllYS8yMDc1Ny9jYWxjaWF0b3JlL3BlZHJvX29iaWFuZy8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+UGVkcm8gT2JpYW5nIDwvYT5kAgsPDxYCHwcFJi9JbWFnZXMvYmFuZGllcmUvRXF1YXRvcmlhbF9HdWluZWEuZ2lmFgIfDAURRXF1YXRvcmlhbCBHdWluZWFkAg0PFgIfAQUHc3BhLVNBU2QCDw8WAh8BBQQ1LDg4ZAIRDxYCHwEFBDUsNjlkAhIPFQICMTgBNmQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDIwNzU3HxQFbWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgUGVkcm8gT2JpYW5nID8nKTsfEmhkZAIxD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDYucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQdVZGluZXNlZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVBib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8zNjc1MC5wbmcpO2QCCA8VAQZKYWphbG9kAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS8xNzY1MC9jYWxjaWF0b3JlL2phamFsby8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+SmFqYWxvIE0uPC9hPmQCCw8PFgIfBwUmL0ltYWdlcy9iYW5kaWVyZS9Cb3NuaWEtRXJ6ZWdvdmluYS5naWYWAh8MBRFCb3NuaWEtRXJ6ZWdvdmluYWQCDQ8WAh8BBQdicmUtVURJZAIPDxYCHwEFBDUsOTNkAhEPFgIfAQUENSw2OGQCEg8VAgIxNgE2ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMTc2NTAfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBKYWphbG8gTS4/Jyk7HxJoZGQCMg9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjc2LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFR2Vub2FkAgUPDxYEHwoFH3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgcPD2QWAh8PBVBib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS82MTQyOS5wbmcpO2QCCA8VAQtSYWRvdmFub3ZpY2QCCQ8WAh8BBX08YSBocmVmPSIvaXQvc2VyaWVhLzE4MzQ3L2NhbGNpYXRvcmUvcmFkb3Zhbm92aWMvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPlJhZG92YW5vdmljIEkuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9TZXJiaWEuZ2lmFgIfDAUGU2VyYmlhZAINDxYCHwEFB0dFTi1jYWdkAg8PFgIfAQUENSw3NWQCEQ8WAh8BBQQ1LDY4ZAISDxUCAjE0ATZkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTAxODM0Nx8UBW5qYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIFJhZG92YW5vdmljIEkuPycpOx8SaGRkAjMPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI3Ni5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBUdlbm9hZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVBib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8zMjEzMS5wbmcpO2QCCA8VAQhFcmlrc3NvbmQCCQ8WAh8BBXc8YSBocmVmPSIvaXQvc2VyaWVhLzE4MTY0L2NhbGNpYXRvcmUvZXJpa3Nzb24vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkVyaWtzc29uIFMuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9TdmV6aWEuZ2lmFgIfDAUGU3ZlemlhZAINDxYCHwEFB0dFTi1jYWdkAg8PFgIfAQUEMCwwMGQCEQ8WAh8BBQQwLDAwZAISDxUCATABNWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE4MTY0HxQFa2phdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgRXJpa3Nzb24gUy4/Jyk7HxJoZGQCNA9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjcwLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUGTmFwb2xpZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8xNzY0NzIucG5nKTtkAggPFQEGWW91bmVzZAIJDxYCHwEFczxhIGhyZWY9Ii9pdC9zZXJpZWEvMTc0NzkvY2FsY2lhdG9yZS95b3VuZXMvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPllvdW5lcyBBLjwvYT5kAgsPDxYCHwcFHS9JbWFnZXMvYmFuZGllcmUvR2VybWFuaWEuZ2lmFgIfDAUIR2VybWFuaWFkAg0PFgIfAQUHTkFQLWxlY2QCDw8WAh8BBQQ1LDgzZAIRDxYCHwEFBDUsNjdkAhIPFQIBNAE1ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMTc0NzkfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBZb3VuZXMgQS4/Jyk7HxJoZGQCNQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjU5LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUKRmlvcmVudGluYWQCBQ8PFgQfCgUfc3RhdG9fY2FsY2lhdG9yZSBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzE1ODM5My5wbmcpO2QCCA8VAQdHaGV6emFsZAIJDxYCHwEFdTxhIGhyZWY9Ii9pdC9zZXJpZWEvMzgwNTgvY2FsY2lhdG9yZS9naGV6emFsLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5HaGV6emFsIFIuPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9BbGdlcmlhLmdpZhYCHwwFB0FsZ2VyaWFkAg0PFgIfAQUHRklPLWF0YWQCDw8WAh8BBQQ1LDQyZAIRDxYCHwEFBDUsNDJkAhIPFQIBNwE1ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMzgwNTgfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBHaGV6emFsIFIuPycpOx8SaGRkAjYPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0OS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFB0JvbG9nbmFkAgUPDxYEHwoFH3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS80NDg0MzIucG5nKTtkAggPFQEIU2Nob3V0ZW5kAgkPFgIfAQV3PGEgaHJlZj0iL2l0L3NlcmllYS83MTc4MS9jYWxjaWF0b3JlL3NjaG91dGVuLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5TY2hvdXRlbiBKLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvT2xhbmRhLmdpZhYCHwwFBk9sYW5kYWQCDQ8WAh8BBQdyb20tQk9MZAIPDxYCHwEFBDYsMDBkAhEPFgIfAQUENSw4MWQCEg8VAgE5ATVkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA3MTc4MR8UBWtqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIFNjaG91dGVuIEouPycpOx8SaGRkAjcPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI1MS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBUxlY2NlZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8yOTg0ODQucG5nKTtkAggPFQEFQmFyYWtkAgkPFgIfAQVxPGEgaHJlZj0iL2l0L3NlcmllYS81OTc4OC9jYWxjaWF0b3JlL2JhcmFrLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5CYXJhayBBLjwvYT5kAgsPDxYCHwcFJC9JbWFnZXMvYmFuZGllcmUvUmVwdWJibGljYV9DZWNhLmdpZhYCHwwFD1JlcHViYmxpY2EgQ2VjYWQCDQ8WAh8BBQduYXAtTEVDZAIPDxYCHwEFBDUsMzBkAhEPFgIfAQUENSwyMGQCEg8VAgE3ATVkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA1OTc4OB8UBWhqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIEJhcmFrIEEuPycpOx8SaGRkAjgPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0My5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBVBhcm1hZAIFDw8WBB8KBSRzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWluZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQ1pbmRpc3BvbmliaWxlZAIHDw9kFgIfDwVQYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvOTM5NzIucG5nKTtkAggPFQELU2NvenphcmVsbGFkAgkPFgIfAQV9PGEgaHJlZj0iL2l0L3NlcmllYS8yMTMyNS9jYWxjaWF0b3JlL3Njb3p6YXJlbGxhLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5TY296emFyZWxsYSBNLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdQQVItbGF6ZAIPDxYCHwEFBDYsMzZkAhEPFgIfAQUENiw1NWQCEg8VAgIxMQE1ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMjEzMjUfFAVuamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBTY296emFyZWxsYSBNLj8nKTsfEmhkZAI5D2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDQucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQVJbnRlcmQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVQYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMTkyMjIucG5nKTtkAggPFQEMQm9yamEgVmFsZXJvZAIJDxYCHwEFfTxhIGhyZWY9Ii9pdC9zZXJpZWEvMTYxOTcvY2FsY2lhdG9yZS9ib3JqYV92YWxlcm8vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkJvcmphIFZhbGVybyA8L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL1NwYWduYS5naWYWAh8MBQZTcGFnbmFkAg0PFgIfAQUHSU5ULW1pbGQCDw8WAh8BBQQ2LDI1ZAIRDxYCHwEFBDYsNjdkAhIPFQIBNwE1ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMTYxOTcfFAVtamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBCb3JqYSBWYWxlcm8gPycpOx8SaGRkAjoPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0MS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBFJvbWFkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpL25vZm90by5wbmcpO2QCCA8VAQ5Hb256YWxvIFZpbGxhcmQCCQ8WAh8BBYEBPGEgaHJlZj0iL2l0L3NlcmllYS82NjU2MS9jYWxjaWF0b3JlL2dvbnphbG9fdmlsbGFyLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5Hb256YWxvIFZpbGxhciA8L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL1NwYWduYS5naWYWAh8MBQZTcGFnbmFkAg0PFgIfAQUHUk9NLWJvbGQCDw8WAh8BBQQwLDAwZAIRDxYCHwEFBDAsMDBkAhIPFQIBMAE1ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNjY1NjEfFAVvamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBHb256YWxvIFZpbGxhciA/Jyk7HxJoZGQCOw9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjc2LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFR2Vub2FkAgUPDxYEHwoFI3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tc3F1YWxpZmljYXRvHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUMc3F1YWxpZmljYXRvZAIHDw9kFgIfDwVOYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMjA2LnBuZyk7ZAIIDxUBB0JlaHJhbWlkAgkPFgIfAQV1PGEgaHJlZj0iL2l0L3NlcmllYS8xODE5My9jYWxjaWF0b3JlL2JlaHJhbWkvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkJlaHJhbWkgVi48L2E+ZAILDw8WAh8HBR0vSW1hZ2VzL2JhbmRpZXJlL1N2aXp6ZXJhLmdpZhYCHwwFCFN2aXp6ZXJhZAINDxYCHwEFB0dFTi1jYWdkAg8PFgIfAQUENSw2N2QCEQ8WAh8BBQQ1LDUwZAISDxUCATQBNWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE4MTkzHxQFamphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQmVocmFtaSBWLj8nKTsfEmhkZAI8D2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDcucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQlTYW1wZG9yaWFkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzI3MDY0OC5wbmcpO2QCCA8VAQdUaG9yc2J5ZAIJDxYCHwEFdTxhIGhyZWY9Ii9pdC9zZXJpZWEvNDAyMjcvY2FsY2lhdG9yZS90aG9yc2J5LyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5UaG9yc2J5IE0uPC9hPmQCCw8PFgIfBwUdL0ltYWdlcy9iYW5kaWVyZS9Ob3J2ZWdpYS5naWYWAh8MBQhOb3J2ZWdpYWQCDQ8WAh8BBQd0b3ItU0FNZAIPDxYCHwEFBDUsODVkAhEPFgIfAQUENSw3NWQCEg8VAgIxMQE0ZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNDAyMjcfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBUaG9yc2J5IE0uPycpOx8SaGRkAj0PZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI4Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBFNQQUxkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUGJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzYxMDczLnBuZyk7ZAIIDxUBClZhbGRpZmlvcmlkAgkPFgIfAQV7PGEgaHJlZj0iL2l0L3NlcmllYS8yMDkzMy9jYWxjaWF0b3JlL3ZhbGRpZmlvcmkvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPlZhbGRpZmlvcmkgTS48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHU1BBLXNhc2QCDw8WAh8BBQQ1LDc1ZAIRDxYCHwEFBDUsODFkAhIPFQICMTABNGQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDIwOTMzHxQFbWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgVmFsZGlmaW9yaSBNLj8nKTsfEmhkZAI+D2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDkucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQdCb2xvZ25hZAIFDw8WBB8KBSRzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWluZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQ1pbmRpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMTE1NTI1LnBuZyk7ZAIIDxUBBktyZWpjaWQCCQ8WAh8BBXM8YSBocmVmPSIvaXQvc2VyaWVhLzIyMTc0L2NhbGNpYXRvcmUva3JlamNpLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5LcmVqY2kgTC48L2E+ZAILDw8WAh8HBSQvSW1hZ2VzL2JhbmRpZXJlL1JlcHViYmxpY2FfQ2VjYS5naWYWAh8MBQ9SZXB1YmJsaWNhIENlY2FkAg0PFgIfAQUHcm9tLUJPTGQCDw8WAh8BBQQ1LDcwZAIRDxYCHwEFBDUsOTBkAhIPFQICMTABNGQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDIyMTc0HxQFaWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgS3JlamNpIEwuPycpOx8SaGRkAj8PZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0OS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFB0JvbG9nbmFkAgUPDxYEHwoFJHN0YXRvX2NhbGNpYXRvcmUgc3RhdG8taW5kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFDWluZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVBib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8yMTc5MC5wbmcpO2QCCA8VAQVNZWRlbGQCCQ8WAh8BBXE8YSBocmVmPSIvaXQvc2VyaWVhLzE2MTI2L2NhbGNpYXRvcmUvbWVkZWwvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPk1lZGVsIEcuPC9hPmQCCw8PFgIfBwUZL0ltYWdlcy9iYW5kaWVyZS9DaWxlLmdpZhYCHwwFBENpbGVkAg0PFgIfAQUHcm9tLUJPTGQCDw8WAh8BBQQ1LDkyZAIRDxYCHwEFBDUsNThkAhIPFQICMTMBNGQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE2MTI2HxQFaGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgTWVkZWwgRy4/Jyk7HxJoZGQCQA9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjUxLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFTGVjY2VkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzI5NzA0My5wbmcpO2QCCA8VAQZEZWlvbGFkAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS80MDQ2Ny9jYWxjaWF0b3JlL2RlaW9sYS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+RGVpb2xhIEEuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAINDxYCHwEFB25hcC1MRUNkAg8PFgIfAQUENSwxN2QCEQ8WAh8BBQQ1LDE3ZAISDxUCATMBM2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDQwNDY3HxQFaWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgRGVpb2xhIEEuPycpOx8SaGRkAkEPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI1Ni5wbmcpOx8QBQd0b29sdGlwHxFlHwwFCENhZ2xpYXJpZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8yNTIzMzcucG5nKTtkAggPFQEGRmFyYWdvZAIJDxYCHwEFczxhIGhyZWY9Ii9pdC9zZXJpZWEvMzc4NzUvY2FsY2lhdG9yZS9mYXJhZ28vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkZhcmFnbyBQLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdnZW4tQ0FHZAIPDxYCHwEFBDUsODVkAhEPFgIfAQUENiwwMGQCEg8VAgIxMQEzZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMzc4NzUfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBGYXJhZ28gUC4/Jyk7HxJoZGQCQg9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjUxLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFTGVjY2VkAgUPDxYEHwoFH3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8xODA0ODgucG5nKTtkAggPFQEFTWFqZXJkAgkPFgIfAQVyPGEgaHJlZj0iL2l0L3NlcmllYS80MTg1Mi9jYWxjaWF0b3JlL21hamVyLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5NYWplciDFvS48L2E+ZAILDw8WAh8HBR0vSW1hZ2VzL2JhbmRpZXJlL1Nsb3ZlbmlhLmdpZhYCHwwFCFNsb3ZlbmlhZAINDxYCHwEFB25hcC1MRUNkAg8PFgIfAQUENSw3M2QCEQ8WAh8BBQQ1LDY3ZAISDxUCAjE2ATNkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA0MTg1Mh8UBWlqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIE1hamVyIMW9Lj8nKTsfEmhkZAJDD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNTYucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQhDYWdsaWFyaWQCBQ8PFgQfCgUfc3RhdG9fY2FsY2lhdG9yZSBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzUzNDQ2NC5wbmcpO2QCCA8VAQVPbGl2YWQCCQ8WAh8BBXE8YSBocmVmPSIvaXQvc2VyaWVhLzcwNDE3L2NhbGNpYXRvcmUvb2xpdmEvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPk9saXZhIEMuPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9VcnVndWF5LmdpZhYCHwwFB1VydWd1YXlkAg0PFgIfAQUHZ2VuLUNBR2QCDw8WAh8BBQQ2LDE5ZAIRDxYCHwEFBDYsNTBkAhIPFQIBOQEzZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNzA0MTcfFAVoamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBPbGl2YSBDLj8nKTsfEmhkZAJED2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNTkucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQpGaW9yZW50aW5hZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS80NzY4NjgucG5nKTtkAggPFQEHQWd1ZGVsb2QCCQ8WAh8BBXU8YSBocmVmPSIvaXQvc2VyaWVhLzc2NTg1L2NhbGNpYXRvcmUvYWd1ZGVsby8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+QWd1ZGVsbyBLLjwvYT5kAgsPDxYCHwcFHS9JbWFnZXMvYmFuZGllcmUvQ29sb21iaWEuZ2lmFgIfDAUIQ29sb21iaWFkAg0PFgIfAQUHRklPLWF0YWQCDw8WAh8BBQQ1LDg5ZAIRDxYCHwEFBDUsOTRkAhIPFQIBOQEzZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNzY1ODUfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBBZ3VkZWxvIEsuPycpOx8SaGRkAkUPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI3Ni5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBUdlbm9hZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMTc4MzM2LnBuZyk7ZAIIDxUBB1N0dXJhcm9kAgkPFgIfAQV1PGEgaHJlZj0iL2l0L3NlcmllYS8xODI4NC9jYWxjaWF0b3JlL3N0dXJhcm8vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPlN0dXJhcm8gUy48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHR0VOLWNhZ2QCDw8WAh8BBQQ1LDg2ZAIRDxYCHwEFBDYsMTRkAhIPFQIBOAEzZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMTgyODQfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBTdHVyYXJvIFMuPycpOx8SaGRkAkYPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0MC5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBU1pbGFuZAIFDw8WBB8KBSRzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWluZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQ1pbmRpc3BvbmliaWxlZAIHDw9kFgIfDwVPYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvNDUyOC5wbmcpO2QCCA8VAQZCaWdsaWFkAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS8yMTgxOS9jYWxjaWF0b3JlL2JpZ2xpYS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+QmlnbGlhIEwuPC9hPmQCCw8PFgIfBwUeL0ltYWdlcy9iYW5kaWVyZS9BcmdlbnRpbmEuZ2lmFgIfDAUJQXJnZW50aW5hZAINDxYCHwEFB2ludC1NSUxkAg8PFgIfAQUENSw0M2QCEQ8WAh8BBQQ1LDM2ZAISDxUCATcBM2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDIxODE5HxQFaWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQmlnbGlhIEwuPycpOx8SaGRkAkcPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0Ni5wbmcpOx8QBQd0b29sdGlwHxFlHwwFB1VkaW5lc2VkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzMzODM1My5wbmcpO2QCCA8VAQZXYWxhY2VkAgkPFgIfAQVxPGEgaHJlZj0iL2l0L3NlcmllYS81ODgzOC9jYWxjaWF0b3JlL3dhbGFjZS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+V2FsYWNlIDwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvQnJhc2lsZS5naWYWAh8MBQdCcmFzaWxlZAINDxYCHwEFB2JyZS1VRElkAg8PFgIfAQUENSw1N2QCEQ8WAh8BBQQ1LDUwZAISDxUCATcBM2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDU4ODM4HxQFZ2phdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgV2FsYWNlID8nKTsfEmhkZAJID2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDUucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQVMYXppb2QCBQ8PFgQfCgUkc3RhdG9fY2FsY2lhdG9yZSBzdGF0by1pbmRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUNaW5kaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzI4ODgzMi5wbmcpO2QCCA8VAQdDYXRhbGRpZAIJDxYCHwEFdTxhIGhyZWY9Ii9pdC9zZXJpZWEvNDAwNDQvY2FsY2lhdG9yZS9jYXRhbGRpLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5DYXRhbGRpIEQuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAINDxYCHwEFB3Bhci1MQVpkAg8PFgIfAQUENiwxMWQCEQ8WAh8BBQQ1LDk0ZAISDxUCATcBM2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDQwMDQ0HxQFamphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQ2F0YWxkaSBELj8nKTsfEmhkZAJJD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNjgucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQZUb3Jpbm9kAgUPDxYEHwoFH3N0YXRvX2NhbGNpYXRvcmUgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8yNjg4NTYucG5nKTtkAggPFQEFTHVraWNkAgkPFgIfAQVxPGEgaHJlZj0iL2l0L3NlcmllYS80ODQ1Ny9jYWxjaWF0b3JlL2x1a2ljLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5MdWtpYyBTLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvU2VyYmlhLmdpZhYCHwwFBlNlcmJpYWQCDQ8WAh8BBQdUT1Itc2FtZAIPDxYCHwEFBDUsNzNkAhEPFgIfAQUENSw1OGQCEg8VAgIxNQEzZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNDg0NTcfFAVoamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBMdWtpYyBTLj8nKTsfEmhkZAJKD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNzcucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQ1IZWxsYXMgVmVyb25hZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVBib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS85NTgyNi5wbmcpO2QCCA8VAQZCb3JpbmlkAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS8xNzc5MS9jYWxjaWF0b3JlL2JvcmluaS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+Qm9yaW5pIEYuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAINDxYCHwEFB0hFTC1qdXZkAg8PFgIfAQUENiwwMGQCEQ8WAh8BBQQ2LDc1ZAISDxUCATQBM2QCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE3NzkxHxQFaWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQm9yaW5pIEYuPycpOx8SaGRkAksPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvNTY4MS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFCFNhc3N1b2xvZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8xMDQ3MTAucG5nKTtkAggPFQEIQm91cmFiaWFkAgkPFgIfAQV3PGEgaHJlZj0iL2l0L3NlcmllYS81MjU4OC9jYWxjaWF0b3JlL2JvdXJhYmlhLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5Cb3VyYWJpYSBNLjwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvTWFyb2Njby5naWYWAh8MBQdNYXJvY2NvZAINDxYCHwEFB3NwYS1TQVNkAg8PFgIfAQUENSwzM2QCEQ8WAh8BBQQ1LDE3ZAISDxUCATUBMmQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDUyNTg4HxQFa2phdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQm91cmFiaWEgTS4/Jyk7HxJoZGQCTA9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQ3LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUJU2FtcGRvcmlhZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8xMTk5OTIucG5nKTtkAggPFQEKQmVydG9sYWNjaWQCCQ8WAh8BBXs8YSBocmVmPSIvaXQvc2VyaWVhLzE4MDMzL2NhbGNpYXRvcmUvYmVydG9sYWNjaS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+QmVydG9sYWNjaSBBLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQd0b3ItU0FNZAIPDxYCHwEFBDUsNTBkAhEPFgIfAQUENSwzOGQCEg8VAgE0ATJkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTAxODAzMx8UBW1qYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIEJlcnRvbGFjY2kgQS4/Jyk7HxJoZGQCTQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjUwLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUHQnJlc2NpYWQCBQ8PFgQfCgUfc3RhdG9fY2FsY2lhdG9yZSBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCBw8PZBYCHw8FT2JvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzQyOTAucG5nKTtkAggPFQEHRGVzc2VuYWQCCQ8WAh8BBXU8YSBocmVmPSIvaXQvc2VyaWVhLzE4MTYyL2NhbGNpYXRvcmUvZGVzc2VuYS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+RGVzc2VuYSBELjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdCUkUtdWRpZAIPDxYCHwEFBDUsNjNkAhEPFgIfAQUENSwzOGQCEg8VAgE5ATJkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTAxODE2Mh8UBWpqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIERlc3NlbmEgRC4/Jyk7HxJoZGQCTg9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjg3LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUEU1BBTGQCBQ8PFgQfCgUkc3RhdG9fY2FsY2lhdG9yZSBzdGF0by1pbmRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUNaW5kaXNwb25pYmlsZWQCBw8PZBYCHw8FUGJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzgwMjk1LnBuZyk7ZAIIDxUBDEQnQWxlc3NhbmRyb2QCCQ8WAh8BBX88YSBocmVmPSIvaXQvc2VyaWVhLzIxMDkyL2NhbGNpYXRvcmUvZCdhbGVzc2FuZHJvLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5EJ0FsZXNzYW5kcm8gTS48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHU1BBLXNhc2QCDw8WAh8BBQQ1LDg4ZAIRDxYCHwEFBDUsODhkAhIPFQIBNAEyZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMjEwOTIfFAVvamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBEJ0FsZXNzYW5kcm8gTS4/Jyk7HxJoZGQCTw9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjUwLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUHQnJlc2NpYWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMjU0ODk4LnBuZyk7ZAIIDxUBBlptcmhhbGQCCQ8WAh8BBXM8YSBocmVmPSIvaXQvc2VyaWVhLzU5NzkwL2NhbGNpYXRvcmUvem1yaGFsLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5abXJoYWwgSi48L2E+ZAILDw8WAh8HBSQvSW1hZ2VzL2JhbmRpZXJlL1JlcHViYmxpY2FfQ2VjYS5naWYWAh8MBQ9SZXB1YmJsaWNhIENlY2FkAg0PFgIfAQUHQlJFLXVkaWQCDw8WAh8BBQQ1LDAwZAIRDxYCHwEFBDUsMDBkAhIPFQIBNAEyZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNTk3OTAfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBabXJoYWwgSi4/Jyk7HxJoZGQCUA9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjc2LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFR2Vub2FkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzMxOTQyOS5wbmcpO2QCCA8VAQhKYWdpZWxsb2QCCQ8WAh8BBXc8YSBocmVmPSIvaXQvc2VyaWVhLzU5OTU1L2NhbGNpYXRvcmUvamFnaWVsbG8vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkphZ2llbGxvIEYuPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9Qb2xvbmlhLmdpZhYCHwwFB1BvbG9uaWFkAg0PFgIfAQUHR0VOLWNhZ2QCDw8WAh8BBQQ1LDc1ZAIRDxYCHwEFBDUsNzVkAhIPFQIBNAEyZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNTk5NTUfFAVramF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBKYWdpZWxsbyBGLj8nKTsfEmhkZAJRD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDkucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQdCb2xvZ25hZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8zNzc0NjMucG5nKTtkAggPFQEIU3ZhbmJlcmdkAgkPFgIfAQV3PGEgaHJlZj0iL2l0L3NlcmllYS81MDk3Ni9jYWxjaWF0b3JlL3N2YW5iZXJnLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5TdmFuYmVyZyBNLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvU3ZlemlhLmdpZhYCHwwFBlN2ZXppYWQCDQ8WAh8BBQdyb20tQk9MZAIPDxYCHwEFBDUsODhkAhEPFgIfAQUENSw5NGQCEg8VAgE4ATJkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA1MDk3Nh8UBWtqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIFN2YW5iZXJnIE0uPycpOx8SaGRkAlIPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI1Ni5wbmcpOx8QBQd0b29sdGlwHxFlHwwFCENhZ2xpYXJpZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBU9ib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8xMzYwLnBuZyk7ZAIIDxUBBUJpcnNhZAIJDxYCHwEFcTxhIGhyZWY9Ii9pdC9zZXJpZWEvMTgyODUvY2FsY2lhdG9yZS9iaXJzYS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+Qmlyc2EgVi48L2E+ZAILDw8WAh8HBR0vSW1hZ2VzL2JhbmRpZXJlL1Nsb3ZlbmlhLmdpZhYCHwwFCFNsb3ZlbmlhZAINDxYCHwEFB2dlbi1DQUdkAg8PFgIfAQUENSw1MGQCEQ8WAh8BBQQ1LDUwZAISDxUCATEBMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE4Mjg1HxQFaGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQmlyc2EgVi4/Jyk7HxJoZGQCUw9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjU1LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUIQXRhbGFudGFkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpL25vZm90by5wbmcpO2QCCA8VAQZDb2xsZXlkAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS83MzE5OS9jYWxjaWF0b3JlL2NvbGxleS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+Q29sbGV5IEUuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9HYW1iaWEuZ2lmFgIfDAUGR2FtYmlhZAINDxYCHwEFB2Zpby1BVEFkAg8PFgIfAQUEMCwwMGQCEQ8WAh8BBQQwLDAwZAISDxUCATABMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDczMTk5HxQFaWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQ29sbGV5IEUuPycpOx8SaGRkAlQPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI1NS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFCEF0YWxhbnRhZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS9ub2ZvdG8ucG5nKTtkAggPFQEHRGEgUml2YWQCCQ8WAh8BBXU8YSBocmVmPSIvaXQvc2VyaWVhLzc4MTUxL2NhbGNpYXRvcmUvZGFfcml2YS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+RGEgUml2YSBKLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdmaW8tQVRBZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgEwATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA3ODE1MR8UBWpqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIERhIFJpdmEgSi4/Jyk7HxJoZGQCVQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjUxLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFTGVjY2VkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzEwMTEyOC5wbmcpO2QCCA8VAQZJbWJ1bGFkAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS80MjcwNC9jYWxjaWF0b3JlL2ltYnVsYS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+SW1idWxhIEcuPC9hPmQCCw8PFgIfBwUdL0ltYWdlcy9iYW5kaWVyZS9Db25nb19EUi5naWYWAh8MBQhDb25nbyBEUmQCDQ8WAh8BBQduYXAtTEVDZAIPDxYCHwEFBDUsMTdkAhEPFgIfAQUENSwxN2QCEg8VAgEzATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA0MjcwNB8UBWlqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIEltYnVsYSBHLj8nKTsfEmhkZAJWD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDkucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQdCb2xvZ25hZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS9ub2ZvdG8ucG5nKTtkAggPFQEKQmFsZHVyc3NvbmQCCQ8WAh8BBXs8YSBocmVmPSIvaXQvc2VyaWVhLzc4MDk0L2NhbGNpYXRvcmUvYmFsZHVyc3Nvbi8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+QmFsZHVyc3NvbiBBLjwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvSXNsYW5kYS5naWYWAh8MBQdJc2xhbmRhZAINDxYCHwEFB3JvbS1CT0xkAg8PFgIfAQUEMCwwMGQCEQ8WAh8BBQQwLDAwZAISDxUCATABMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDc4MDk0HxQFbWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQmFsZHVyc3NvbiBBLj8nKTsfEmhkZAJXD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNzYucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQVHZW5vYWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvbm9mb3RvLnBuZyk7ZAIIDxUBB1JvdmVsbGFkAgkPFgIfAQV1PGEgaHJlZj0iL2l0L3NlcmllYS83MDcwNi9jYWxjaWF0b3JlL3JvdmVsbGEvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPlJvdmVsbGEgTi48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHR0VOLWNhZ2QCDw8WAh8BBQQ2LDAwZAIRDxYCHwEFBDYsMDBkAhIPFQIBMQExZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNzA3MDYfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBSb3ZlbGxhIE4uPycpOx8SaGRkAlgPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI3Ni5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBUdlbm9hZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS9ub2ZvdG8ucG5nKTtkAggPFQEHWmVubmFyb2QCCQ8WAh8BBXU8YSBocmVmPSIvaXQvc2VyaWVhLzY3MzQyL2NhbGNpYXRvcmUvemVubmFyby8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+WmVubmFybyBNLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdHRU4tY2FnZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgEwATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA2NzM0Mh8UBWpqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIFplbm5hcm8gTS4/Jyk7HxJoZGQCWQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQ3LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUJU2FtcGRvcmlhZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBU5ib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8zOTkucG5nKTtkAggPFQEHQmFycmV0b2QCCQ8WAh8BBXU8YSBocmVmPSIvaXQvc2VyaWVhLzE4MDk5L2NhbGNpYXRvcmUvYmFycmV0by8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+QmFycmV0byBFLjwvYT5kAgsPDxYCHwcFHS9JbWFnZXMvYmFuZGllcmUvUGFyYWd1YXkuZ2lmFgIfDAUIUGFyYWd1YXlkAg0PFgIfAQUHdG9yLVNBTWQCDw8WAh8BBQQ1LDc1ZAIRDxYCHwEFBDUsNzVkAhIPFQIBMgExZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMTgwOTkfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBCYXJyZXRvIEUuPycpOx8SaGRkAloPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI1OS5wbmcpOx8QBQd0b29sdGlwHxFlHwwFCkZpb3JlbnRpbmFkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzUxOTc4Ni5wbmcpO2QCCA8VAQZCZWxva29kAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS82NTM1Ni9jYWxjaWF0b3JlL2JlbG9rby8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+QmVsb2tvIE4uPC9hPmQCCw8PFgIfBwUdL0ltYWdlcy9iYW5kaWVyZS9Tdml6emVyYS5naWYWAh8MBQhTdml6emVyYWQCDQ8WAh8BBQdGSU8tYXRhZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgEwATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA2NTM1Nh8UBWlqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIEJlbG9rbyBOLj8nKTsfEmhkZAJbD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDYucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQdVZGluZXNlZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS9ub2ZvdG8ucG5nKTtkAggPFQEJQmFsbGFyaW5pZAIJDxYCHwEFeTxhIGhyZWY9Ii9pdC9zZXJpZWEvNzgxODEvY2FsY2lhdG9yZS9iYWxsYXJpbmkvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkJhbGxhcmluaSBNLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdicmUtVURJZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgEwATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA3ODE4MR8UBWxqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIEJhbGxhcmluaSBNLj8nKTsfEmhkZAJcD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDUucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQVMYXppb2QCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMzMzNjAyLnBuZyk7ZAIIDxUBBk1pbmFsYWQCCQ8WAh8BBXM8YSBocmVmPSIvaXQvc2VyaWVhLzQ1MDcxL2NhbGNpYXRvcmUvbWluYWxhLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5NaW5hbGEgSi48L2E+ZAILDw8WAh8HBRwvSW1hZ2VzL2JhbmRpZXJlL0NhbWVydW4uZ2lmFgIfDAUHQ2FtZXJ1bmQCDQ8WAh8BBQdwYXItTEFaZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgEwATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA0NTA3MR8UBWlqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIE1pbmFsYSBKLj8nKTsfEmhkZAJdD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDYucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQdVZGluZXNlZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS9ub2ZvdG8ucG5nKTtkAggPFQEGS3ViYWxhZAIJDxYCHwEFczxhIGhyZWY9Ii9pdC9zZXJpZWEvNzc5MDAvY2FsY2lhdG9yZS9rdWJhbGEvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkt1YmFsYSBKLjwvYT5kAgsPDxYCHwcFJC9JbWFnZXMvYmFuZGllcmUvUmVwdWJibGljYV9DZWNhLmdpZhYCHwwFD1JlcHViYmxpY2EgQ2VjYWQCDQ8WAh8BBQdicmUtVURJZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgEwATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA3NzkwMB8UBWlqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIEt1YmFsYSBKLj8nKTsfEmhkZAJeD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNDUucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQVMYXppb2QCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvNTYzNjMxLnBuZyk7ZAIIDxUBDkFuZHJlIEFuZGVyc29uZAIJDxYCHwEFgQE8YSBocmVmPSIvaXQvc2VyaWVhLzY5NTg4L2NhbGNpYXRvcmUvYW5kcmVfYW5kZXJzb24vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkFuZHJlIEFuZGVyc29uIDwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvQnJhc2lsZS5naWYWAh8MBQdCcmFzaWxlZAINDxYCHwEFB3Bhci1MQVpkAg8PFgIfAQUENSw1MGQCEQ8WAh8BBQQ1LDUwZAISDxUCATEBMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDY5NTg4HxQFb2phdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQW5kcmUgQW5kZXJzb24gPycpOx8SaGRkAl8PZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0MC5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBU1pbGFuZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS81NTY2NzcucG5nKTtkAggPFQELQnJlc2NpYW5pbmlkAgkPFgIfAQV9PGEgaHJlZj0iL2l0L3NlcmllYS82Nzc2MS9jYWxjaWF0b3JlL2JyZXNjaWFuaW5pLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5CcmVzY2lhbmluaSBNLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdpbnQtTUlMZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgEwATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA2Nzc2MR8UBW5qYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIEJyZXNjaWFuaW5pIE0uPycpOx8SaGRkAmAPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0MC5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBU1pbGFuZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS9ub2ZvdG8ucG5nKTtkAggPFQEEU2FsYWQCCQ8WAh8BBW88YSBocmVmPSIvaXQvc2VyaWVhLzc3MDI0L2NhbGNpYXRvcmUvc2FsYS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+U2FsYSBBLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdpbnQtTUlMZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgEwATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA3NzAyNB8UBWdqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIFNhbGEgQS4/Jyk7HxJoZGQCYQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQxLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUEUm9tYWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvbm9mb3RvLnBuZyk7ZAIIDxUBBkRhcmJvZWQCCQ8WAh8BBXM8YSBocmVmPSIvaXQvc2VyaWVhLzc4MDkxL2NhbGNpYXRvcmUvZGFyYm9lLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5EYXJib2UgRS48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0dhbWJpYS5naWYWAh8MBQZHYW1iaWFkAg0PFgIfAQUHUk9NLWJvbGQCDw8WAh8BBQQwLDAwZAIRDxYCHwEFBDAsMDBkAhIPFQIBMAExZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNzgwOTEfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBEYXJib2UgRS4/Jyk7HxJoZGQCYg9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQyLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUISnV2ZW50dXNkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpL25vZm90by5wbmcpO2QCCA8VAQhNdXJhdG9yZWQCCQ8WAh8BBXc8YSBocmVmPSIvaXQvc2VyaWVhLzYxODIzL2NhbGNpYXRvcmUvbXVyYXRvcmUvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPk11cmF0b3JlIFMuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAINDxYCHwEFB2hlbC1KVVZkAg8PFgIfAQUEMCwwMGQCEQ8WAh8BBQQwLDAwZAISDxUCATABMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDYxODIzHxQFa2phdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgTXVyYXRvcmUgUy4/Jyk7HxJoZGQCYw9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQyLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUISnV2ZW50dXNkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpL25vZm90by5wbmcpO2QCCA8VAQlQb3J0YW5vdmFkAgkPFgIfAQV5PGEgaHJlZj0iL2l0L3NlcmllYS83MTM1OS9jYWxjaWF0b3JlL3BvcnRhbm92YS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+UG9ydGFub3ZhIE0uPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAINDxYCHwEFB2hlbC1KVVZkAg8PFgIfAQUEMCwwMGQCEQ8WAh8BBQQwLDAwZAISDxUCATABMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDcxMzU5HxQFbGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgUG9ydGFub3ZhIE0uPycpOx8SaGRkAmQPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0My5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBVBhcm1hZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS9ub2ZvdG8ucG5nKTtkAggPFQEGQ2FtYXJhZAIJDxYCHwEFczxhIGhyZWY9Ii9pdC9zZXJpZWEvNjk5MzcvY2FsY2lhdG9yZS9jYW1hcmEvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkNhbWFyYSBELjwvYT5kAgsPDxYCHwcFIy9JbWFnZXMvYmFuZGllcmUvQ29zdGFfZF9hdm9yaW8uZ2lmFgIfDAUOQ29zdGEgZCdhdm9yaW9kAg0PFgIfAQUHUEFSLWxhemQCDw8WAh8BBQQwLDAwZAIRDxYCHwEFBDAsMDBkAhIPFQIBMAExZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNjk5MzcfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBDYW1hcmEgRC4/Jyk7HxJoZGQCZQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQzLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFUGFybWFkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpL25vZm90by5wbmcpO2QCCA8VAQRLYXNhZAIJDxYCHwEFbzxhIGhyZWY9Ii9pdC9zZXJpZWEvNzExNDgvY2FsY2lhdG9yZS9rYXNhLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5LYXNhIFIuPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9BbGJhbmlhLmdpZhYCHwwFB0FsYmFuaWFkAg0PFgIfAQUHUEFSLWxhemQCDw8WAh8BBQQwLDAwZAIRDxYCHwEFBDAsMDBkAhIPFQIBMAExZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNzExNDgfFAVnamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBLYXNhIFIuPycpOx8SaGRkAmYPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI4Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBFNQQUxkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpL25vZm90by5wbmcpO2QCCA8VAQZUdW5qb3ZkAgkPFgIfAQVzPGEgaHJlZj0iL2l0L3NlcmllYS82ODY1Mi9jYWxjaWF0b3JlL3R1bmpvdi8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+VHVuam92IEcuPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9Fc3RvbmlhLmdpZhYCHwwFB0VzdG9uaWFkAg0PFgIfAQUHU1BBLXNhc2QCDw8WAh8BBQQ1LDAwZAIRDxYCHwEFBDUsMDBkAhIPFQIBMQExZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNjg2NTIfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBUdW5qb3YgRy4/Jyk7HxJoZGQCZw9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS81NjgxLnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUIU2Fzc3VvbG9kAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpL25vZm90by5wbmcpO2QCCA8VAQlNYXJnaW5lYW5kAgkPFgIfAQV6PGEgaHJlZj0iL2l0L3NlcmllYS83ODIzOS9jYWxjaWF0b3JlL21hcmdpbmVhbi8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+TWFyZ2luZWFuIEkgLjwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvUm9tYW5pYS5naWYWAh8MBQdSb21hbmlhZAINDxYCHwEFB3NwYS1TQVNkAg8PFgIfAQUEMCwwMGQCEQ8WAh8BBQQwLDAwZAISDxUCATABMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDc4MjM5HxQFbWphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgTWFyZ2luZWFuIEkgLj8nKTsfEmhkZAJoD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzU2ODEucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQhTYXNzdW9sb2QCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvbm9mb3RvLnBuZyk7ZAIIDxUBBUdoaW9uZAIJDxYCHwEFcTxhIGhyZWY9Ii9pdC9zZXJpZWEvNzEzNjEvY2FsY2lhdG9yZS9naGlvbi8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+R2hpb24gQS48L2E+ZAILDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAg0PFgIfAQUHc3BhLVNBU2QCDw8WAh8BBQQwLDAwZAIRDxYCHwEFBDAsMDBkAhIPFQIBMAExZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNzEzNjEfFAVoamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBHaGlvbiBBLj8nKTsfEmhkZAJpD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyODcucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQRTUEFMZAIFDw8WBB8KBR9zdGF0b19jYWxjaWF0b3JlIHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvMTMxMjgzLnBuZyk7ZAIIDxUBBERhYm9kAgkPFgIfAQVvPGEgaHJlZj0iL2l0L3NlcmllYS8xODc4My9jYWxjaWF0b3JlL2RhYm8vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkRhYm8gQi48L2E+ZAILDw8WAh8HBSEvSW1hZ2VzL2JhbmRpZXJlL0J1cmtpbmFfRmFzby5naWYWAh8MBQxCdXJraW5hIEZhc29kAg0PFgIfAQUHU1BBLXNhc2QCDw8WAh8BBQQ2LDI1ZAIRDxYCHwEFBDYsMjVkAhIPFQIBMwExZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMTg3ODMfFAVnamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBEYWJvIEIuPycpOx8SaGRkAmoPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI4Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFBFNQQUxkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpL25vZm90by5wbmcpO2QCCA8VAQlaYW5jaGV0dGFkAgkPFgIfAQV5PGEgaHJlZj0iL2l0L3NlcmllYS83Nzk5NC9jYWxjaWF0b3JlL3phbmNoZXR0YS8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+WmFuY2hldHRhIEYuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAINDxYCHwEFB1NQQS1zYXNkAg8PFgIfAQUEMCwwMGQCEQ8WAh8BBQQwLDAwZAISDxUCATABMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDc3OTk0HxQFbGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgWmFuY2hldHRhIEYuPycpOx8SaGRkAmsPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI1MC5wbmcpOx8QBQd0b29sdGlwHxFlHwwFB0JyZXNjaWFkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzU0MzI0Mi5wbmcpO2QCCA8VAQdWaXZpYW5pZAIJDxYCHwEFdTxhIGhyZWY9Ii9pdC9zZXJpZWEvNjYyOTkvY2FsY2lhdG9yZS92aXZpYW5pLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5WaXZpYW5pIE0uPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAINDxYCHwEFB0JSRS11ZGlkAg8PFgIfAQUENSw1MGQCEQ8WAh8BBQQ1LDUwZAISDxUCATIBMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDY2Mjk5HxQFamphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgVml2aWFuaSBNLj8nKTsfEmhkZAJsD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNTAucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQdCcmVzY2lhZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS8yNzM4NTAucG5nKTtkAggPFQEETmRvamQCCQ8WAh8BBW88YSBocmVmPSIvaXQvc2VyaWVhLzU4MDQ1L2NhbGNpYXRvcmUvbmRvai8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyI+TmRvaiBFLjwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvQWxiYW5pYS5naWYWAh8MBQdBbGJhbmlhZAINDxYCHwEFB0JSRS11ZGlkAg8PFgIfAQUENSw1MGQCEQ8WAh8BBQQ1LDQwZAISDxUCAjExATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA1ODA0NR8UBWdqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIE5kb2ogRS4/Jyk7HxJoZGQCbQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjQ3LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUJU2FtcGRvcmlhZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS80NTQ3NDAucG5nKTtkAggPFQEFTGVyaXNkAgkPFgIfAQVxPGEgaHJlZj0iL2l0L3NlcmllYS82MjYxMS9jYWxjaWF0b3JlL2xlcmlzLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5MZXJpcyBNLjwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvRnJhbmNpYS5naWYWAh8MBQdGcmFuY2lhZAINDxYCHwEFB3Rvci1TQU1kAg8PFgIfAQUENSw0M2QCEQ8WAh8BBQQ1LDQzZAISDxUCATcBMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDYyNjExHxQFaGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgTGVyaXMgTS4/Jyk7HxJoZGQCbg9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjc2LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFR2Vub2FkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzMzNTIwOS5wbmcpO2QCCA8VAQdDYXNzYXRhZAIJDxYCHwEFdTxhIGhyZWY9Ii9pdC9zZXJpZWEvNTg2NzcvY2FsY2lhdG9yZS9jYXNzYXRhLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5DYXNzYXRhIEYuPC9hPmQCCw8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAINDxYCHwEFB0dFTi1jYWdkAg8PFgIfAQUENSw2NGQCEQ8WAh8BBQQ1LDMyZAISDxUCAjEyATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA1ODY3Nx8UBWpqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIENhc3NhdGEgRi4/Jyk7HxJoZGQCbw9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjc2LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUFR2Vub2FkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpL25vZm90by5wbmcpO2QCCA8VAQdFYm9uZ3VlZAIJDxYCHwEFdTxhIGhyZWY9Ii9pdC9zZXJpZWEvNzgyMzAvY2FsY2lhdG9yZS9lYm9uZ3VlLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5FYm9uZ3VlIFMuPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9GcmFuY2lhLmdpZhYCHwwFB0ZyYW5jaWFkAg0PFgIfAQUHR0VOLWNhZ2QCDw8WAh8BBQQwLDAwZAIRDxYCHwEFBDAsMDBkAhIPFQIBMAExZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNzgyMzAfFAVqamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBFYm9uZ3VlIFMuPycpOx8SaGRkAnAPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI0Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFCVNhbXBkb3JpYWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVRYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvNDEzNTQ4LnBuZyk7ZAIIDxUBBk1hcm9uaWQCCQ8WAh8BBXM8YSBocmVmPSIvaXQvc2VyaWVhLzcxNzU5L2NhbGNpYXRvcmUvbWFyb25pLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5NYXJvbmkgRy48L2E+ZAILDw8WAh8HBR4vSW1hZ2VzL2JhbmRpZXJlL0FyZ2VudGluYS5naWYWAh8MBQlBcmdlbnRpbmFkAg0PFgIfAQUHdG9yLVNBTWQCDw8WAh8BBQQwLDAwZAIRDxYCHwEFBDAsMDBkAhIPFQIBMQExZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwNzE3NTkfFAVpamF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBNYXJvbmkgRy4/Jyk7HxJoZGQCcQ9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjc3LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUNSGVsbGFzIFZlcm9uYWQCBQ8PFgQfCgUic3RhdG9fY2FsY2lhdG9yZSBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIHDw9kFgIfDwVQYm9yZGVyLWNvbG9yOiAjMDA1YzAwOyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9mb3RvX2NhbGNpYXRvcmkvODE4OTkucG5nKTtkAggPFQENQWd5ZW1hbmctQmFkdWQCCQ8WAh8BBYEBPGEgaHJlZj0iL2l0L3NlcmllYS8xNzkzNS9jYWxjaWF0b3JlL2FneWVtYW5nLWJhZHUvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkFneWVtYW5nLUJhZHUgRS48L2E+ZAILDw8WAh8HBRovSW1hZ2VzL2JhbmRpZXJlL0doYW5hLmdpZhYCHwwFBUdoYW5hZAINDxYCHwEFB0hFTC1qdXZkAg8PFgIfAQUEMCwwMGQCEQ8WAh8BBQQwLDAwZAISDxUCATABMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDE3OTM1HxQFcGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQWd5ZW1hbmctQmFkdSBFLj8nKTsfEmhkZAJyD2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNzcucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQ1IZWxsYXMgVmVyb25hZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS80OTgyNDkucG5nKTtkAggPFQEFRGFuemlkAgkPFgIfAQVxPGEgaHJlZj0iL2l0L3NlcmllYS82NDcxNi9jYWxjaWF0b3JlL2RhbnppLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5EYW56aSBBLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCDQ8WAh8BBQdIRUwtanV2ZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgEwATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA2NDcxNh8UBWhqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIERhbnppIEEuPycpOx8SaGRkAnMPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI3Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFDUhlbGxhcyBWZXJvbmFkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpLzE1OTIyMy5wbmcpO2QCCA8VAQhFeXNzZXJpY2QCCQ8WAh8BBXc8YSBocmVmPSIvaXQvc2VyaWVhLzM4NDgzL2NhbGNpYXRvcmUvZXlzc2VyaWMvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiPkV5c3NlcmljIFYuPC9hPmQCCw8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9GcmFuY2lhLmdpZhYCHwwFB0ZyYW5jaWFkAg0PFgIfAQUHSEVMLWp1dmQCDw8WAh8BBQQ1LDUwZAIRDxYCHwEFBDUsNTBkAhIPFQIBMQExZAITDw8WAh8SaGRkAhcPDxYGHxMFBzEwMzg0ODMfFAVramF2YXNjcmlwdDpyZXR1cm4gY29uZmlybSgnU2VpIHNpY3VybyBkaSB2b2xlciBmYXJlIHVu4oCZb2ZmZXJ0YSBwdWJibGljYSBwZXIgaWwgY2FsY2lhdG9yZSBFeXNzZXJpYyBWLj8nKTsfEmhkZAJ0D2QWGgIBDxYEHw0FKnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sb19jZW50cm9jYW1waXN0YR8OBQ5DZW50cm9jYW1waXN0aRYCAgEPFgIfAQUBQ2QCAw8PZBYIHw8FMWJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL3NjdWRldHRpLzEyNzcucG5nKTsfEAUHdG9vbHRpcB8RZR8MBQ1IZWxsYXMgVmVyb25hZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS9ub2ZvdG8ucG5nKTtkAggPFQEFSm9jaWNkAgkPFgIfAQVxPGEgaHJlZj0iL2l0L3NlcmllYS83ODQ2Ny9jYWxjaWF0b3JlL2pvY2ljLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5Kb2NpYyBCLjwvYT5kAgsPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvU2VyYmlhLmdpZhYCHwwFBlNlcmJpYWQCDQ8WAh8BBQdIRUwtanV2ZAIPDxYCHwEFBDAsMDBkAhEPFgIfAQUEMCwwMGQCEg8VAgEwATFkAhMPDxYCHxJoZGQCFw8PFgYfEwUHMTA3ODQ2Nx8UBWhqYXZhc2NyaXB0OnJldHVybiBjb25maXJtKCdTZWkgc2ljdXJvIGRpIHZvbGVyIGZhcmUgdW7igJlvZmZlcnRhIHB1YmJsaWNhIHBlciBpbCBjYWxjaWF0b3JlIEpvY2ljIEIuPycpOx8SaGRkAnUPZBYaAgEPFgQfDQUqcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvX2NlbnRyb2NhbXBpc3RhHw4FDkNlbnRyb2NhbXBpc3RpFgICAQ8WAh8BBQFDZAIDDw9kFggfDwUxYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvc2N1ZGV0dGkvMTI3Ny5wbmcpOx8QBQd0b29sdGlwHxFlHwwFDUhlbGxhcyBWZXJvbmFkAgUPDxYEHwoFInN0YXRvX2NhbGNpYXRvcmUgc3RhdG8tZGlzcG9uaWJpbGUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBQtkaXNwb25pYmlsZWQCBw8PZBYCHw8FUWJvcmRlci1jb2xvcjogIzAwNWMwMDsgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWFnZXMvZm90b19jYWxjaWF0b3JpL25vZm90by5wbmcpO2QCCA8VAQ1MdWNhcyBGZWxpcHBlZAIJDxYCHwEFfzxhIGhyZWY9Ii9pdC9zZXJpZWEvNjk0MTAvY2FsY2lhdG9yZS9sdWNhc19mZWxpcHBlLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5MdWNhcyBGZWxpcHBlIDwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvQnJhc2lsZS5naWYWAh8MBQdCcmFzaWxlZAINDxYCHwEFB0hFTC1qdXZkAg8PFgIfAQUEMCwwMGQCEQ8WAh8BBQQwLDAwZAISDxUCATABMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDY5NDEwHxQFbmphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgTHVjYXMgRmVsaXBwZSA/Jyk7HxJoZGQCdg9kFhoCAQ8WBB8NBSpydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG9fY2VudHJvY2FtcGlzdGEfDgUOQ2VudHJvY2FtcGlzdGkWAgIBDxYCHwEFAUNkAgMPD2QWCB8PBTFiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltYWdlcy9zY3VkZXR0aS8xMjY4LnBuZyk7HxAFB3Rvb2x0aXAfEWUfDAUGVG9yaW5vZAIFDw8WBB8KBSJzdGF0b19jYWxjaWF0b3JlIHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgcPD2QWAh8PBVFib3JkZXItY29sb3I6ICMwMDVjMDA7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgvaW1hZ2VzL2ZvdG9fY2FsY2lhdG9yaS9ub2ZvdG8ucG5nKTtkAggPFQEFQWRvcG9kAgkPFgIfAQVxPGEgaHJlZj0iL2l0L3NlcmllYS82NjQ1Ny9jYWxjaWF0b3JlL2Fkb3BvLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07Ij5BZG9wbyBNLjwvYT5kAgsPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvRnJhbmNpYS5naWYWAh8MBQdGcmFuY2lhZAINDxYCHwEFB1RPUi1zYW1kAg8PFgIfAQUEMCwwMGQCEQ8WAh8BBQQwLDAwZAISDxUCATABMWQCEw8PFgIfEmhkZAIXDw8WBh8TBQcxMDY2NDU3HxQFaGphdmFzY3JpcHQ6cmV0dXJuIGNvbmZpcm0oJ1NlaSBzaWN1cm8gZGkgdm9sZXIgZmFyZSB1buKAmW9mZmVydGEgcHViYmxpY2EgcGVyIGlsIGNhbGNpYXRvcmUgQWRvcG8gTS4/Jyk7HxJoZGQCAw9kFgQCAg9kFgICAw9kFgYCAQ9kFgQCAQ8WAh8BBSFJbCBNZXJjYXRvIFByaXZhdG8gY2hpdWRlcsOgIHRyYTpkAgMPZBYCAgEPD2QWAh4JZGF0YS1kYXRlBRMyMDIwLTAyLTA3IDE5OjQ1OjAwZAIDDw8WBB8KBS1zdGF0b19tZXJjYXRvX2xlZnQgc3RhdG9fbWVyY2F0b19kaXNhYmlsaXRhdG8fCwICZBYEAgEPFgIfAQUdSWwgTWVyY2F0byBQdWJibGljbyDDqCBjaGl1c29kAgMPZBYCAgEPD2QWAh8VBRMyMDIwLTAyLTA3IDE5OjQ1OjAwZAIFD2QWBAIBDxYCHwEFHFRlcm1pbmUgY29uc2VnbmEgZm9ybWF6aW9uZTpkAgMPZBYCAgEPD2QWAh8VBRMyMDIwLTAyLTA3IDIwOjQ1OjAwZAIGD2QWAgICD2QWAmYPZBYCAgEPFgIfBQIYFjBmD2QWEgIBDxYCHw0FQXJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sby13aWRnZXQtZmFudGFjYWxjaWF0b3JpIHJ1b2xvX3BvcnRpZXJlFgICAQ8WAh8BBQFQZAIDDxYCHwEFtgE8YSBocmVmPSIvaXQvc2VyaWVhLzM4OTc2L2NhbGNpYXRvcmUvZ3VlcnJpZXJpLyIgY2xhc3M9InN0cm9uZyBwb3J0aWVyZSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07IiB0aXRsZT0iIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iR3VlcnJpZXJpIEcuIiA+R3VlcnJpZXJpIEcuPC9hPmQCBQ8WAh8BBQ4oPGVtPkxhejwvZW0+KWQCBw8PFgQfCgU6c3RhdG9fY2FsY2lhdG9yZSBzdGF0b19jYWxjaWF0b3JlX3dpZGdldCBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIJDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAgoPFQMBMAExATFkAgsPFgIfAQUEMCwwMGQCDQ8WAh8BBQQwLDAwZAIPDxYCHwEFGihQYXItPHN0cm9uZz5MYXo8L3N0cm9uZz4pZAIBD2QWEgIBDxYCHw0FQXJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sby13aWRnZXQtZmFudGFjYWxjaWF0b3JpIHJ1b2xvX3BvcnRpZXJlFgICAQ8WAh8BBQFQZAIDDxYCHwEFqgE8YSBocmVmPSIvaXQvc2VyaWVhLzIxODA5L2NhbGNpYXRvcmUvcHJvdG8vIiBjbGFzcz0ic3Ryb25nIHBvcnRpZXJlIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiIHRpdGxlPSIiIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJQcm90byBTLiIgPlByb3RvIFMuPC9hPmQCBQ8WAh8BBQ4oPGVtPkxhejwvZW0+KWQCBw8PFgQfCgU6c3RhdG9fY2FsY2lhdG9yZSBzdGF0b19jYWxjaWF0b3JlX3dpZGdldCBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIJDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0JlbGdpby5naWYWAh8MBQZCZWxnaW9kAgoPFQMBMAExATFkAgsPFgIfAQUEMCwwMGQCDQ8WAh8BBQQwLDAwZAIPDxYCHwEFGihQYXItPHN0cm9uZz5MYXo8L3N0cm9uZz4pZAICD2QWEgIBDxYCHw0FQXJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sby13aWRnZXQtZmFudGFjYWxjaWF0b3JpIHJ1b2xvX3BvcnRpZXJlFgICAQ8WAh8BBQFQZAIDDxYCHwEFtgE8YSBocmVmPSIvaXQvc2VyaWVhLzM4OTU5L2NhbGNpYXRvcmUvc3RyYWtvc2hhLyIgY2xhc3M9InN0cm9uZyBwb3J0aWVyZSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07IiB0aXRsZT0iIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iU3RyYWtvc2hhIFQuIiA+U3RyYWtvc2hhIFQuPC9hPmQCBQ8WAh8BBQ4oPGVtPkxhejwvZW0+KWQCBw8PFgQfCgU3c3RhdG9fY2FsY2lhdG9yZSBzdGF0b19jYWxjaWF0b3JlX3dpZGdldCBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCCQ8PFgIfBwUcL0ltYWdlcy9iYW5kaWVyZS9BbGJhbmlhLmdpZhYCHwwFB0FsYmFuaWFkAgoPFQMCMjECMTcCMjBkAgsPFgIfAQUENiw0M2QCDQ8WAh8BBQQ1LDYzZAIPDxYCHwEFGihQYXItPHN0cm9uZz5MYXo8L3N0cm9uZz4pZAIDD2QWEgIBDxYCHw0FQnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sby13aWRnZXQtZmFudGFjYWxjaWF0b3JpIHJ1b2xvX2RpZmVuc29yZRYCAgEPFgIfAQUBRGQCAw8WAh8BBa4BPGEgaHJlZj0iL2l0L3NlcmllYS8xNzk1OC9jYWxjaWF0b3JlL2FjZXJiaS8iIGNsYXNzPSJzdHJvbmcgZGlmZW5zb3JlIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiIHRpdGxlPSIiIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJBY2VyYmkgRi4iID5BY2VyYmkgRi48L2E+ZAIFDxYCHwEFDig8ZW0+TGF6PC9lbT4pZAIHDw8WBB8KBTdzdGF0b19jYWxjaWF0b3JlIHN0YXRvX2NhbGNpYXRvcmVfd2lkZ2V0IHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIJDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAgoPFQMCMjECMjYCMTFkAgsPFgIfAQUENiwzNWQCDQ8WAh8BBQQ2LDczZAIPDxYCHwEFGihQYXItPHN0cm9uZz5MYXo8L3N0cm9uZz4pZAIED2QWEgIBDxYCHw0FQnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sby13aWRnZXQtZmFudGFjYWxjaWF0b3JpIHJ1b2xvX2RpZmVuc29yZRYCAgEPFgIfAQUBRGQCAw8WAh8BBbQBPGEgaHJlZj0iL2l0L3NlcmllYS81MDA2Ni9jYWxjaWF0b3JlL2NhbGFicmlhLyIgY2xhc3M9InN0cm9uZyBkaWZlbnNvcmUiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyIgdGl0bGU9IiIgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtb3JpZ2luYWwtdGl0bGU9IkNhbGFicmlhIEQuIiA+Q2FsYWJyaWEgRC48L2E+ZAIFDxYCHwEFDig8ZW0+TWlsPC9lbT4pZAIHDw8WBB8KBTdzdGF0b19jYWxjaWF0b3JlIHN0YXRvX2NhbGNpYXRvcmVfd2lkZ2V0IHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIJDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAgoPFQMCMTQBNAE0ZAILDxYCHwEFBDUsMjNkAg0PFgIfAQUENSwwOGQCDw8WAh8BBRooSW50LTxzdHJvbmc+TWlsPC9zdHJvbmc+KWQCBQ9kFhICAQ8WAh8NBUJydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG8td2lkZ2V0LWZhbnRhY2FsY2lhdG9yaSBydW9sb19kaWZlbnNvcmUWAgIBDxYCHwEFAURkAgMPFgIfAQWrATxhIGhyZWY9Ii9pdC9zZXJpZWEvNDY2NzgvY2FsY2lhdG9yZS9jb250aS8iIGNsYXNzPSJzdHJvbmcgZGlmZW5zb3JlIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiIHRpdGxlPSIiIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJDb250aSBBLiIgPkNvbnRpIEEuPC9hPmQCBQ8WAh8BBQ4oPGVtPk1pbDwvZW0+KWQCBw8PFgQfCgU6c3RhdG9fY2FsY2lhdG9yZSBzdGF0b19jYWxjaWF0b3JlX3dpZGdldCBzdGF0by1kaXNwb25pYmlsZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIJDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAgoPFQMCMTMBNQEzZAILDxYCHwEFBDUsNjNkAg0PFgIfAQUENSw1NGQCDw8WAh8BBRooSW50LTxzdHJvbmc+TWlsPC9zdHJvbmc+KWQCBg9kFhICAQ8WAh8NBUJydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG8td2lkZ2V0LWZhbnRhY2FsY2lhdG9yaSBydW9sb19kaWZlbnNvcmUWAgIBDxYCHwEFAURkAgMPFgIfAQW+ATxhIGhyZWY9Ii9pdC9zZXJpZWEvMTgxODIvY2FsY2lhdG9yZS9kZV9zaWx2ZXN0cmkvIiBjbGFzcz0ic3Ryb25nIGRpZmVuc29yZSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07IiB0aXRsZT0iIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iRGUgU2lsdmVzdHJpIEwuIiA+RGUgU2lsdmVzdC4uLjwvYT5kAgUPFgIfAQUOKDxlbT5Ub3I8L2VtPilkAgcPDxYEHwoFN3N0YXRvX2NhbGNpYXRvcmUgc3RhdG9fY2FsY2lhdG9yZV93aWRnZXQgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgkPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCCg8VAwIxNAE3ATdkAgsPFgIfAQUENSw4MWQCDQ8WAh8BBQQ1LDc3ZAIPDxYCHwEFGig8c3Ryb25nPlRvcjwvc3Ryb25nPi1TYW0pZAIHD2QWEgIBDxYCHw0FQnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sby13aWRnZXQtZmFudGFjYWxjaWF0b3JpIHJ1b2xvX2RpZmVuc29yZRYCAgEPFgIfAQUBRGQCAw8WAh8BBbEBPGEgaHJlZj0iL2l0L3NlcmllYS80NjY1Ni9jYWxjaWF0b3JlL2ZlcnJhcmkvIiBjbGFzcz0ic3Ryb25nIGRpZmVuc29yZSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07IiB0aXRsZT0iIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iRmVycmFyaSBHLiIgPkZlcnJhcmkgRy48L2E+ZAIFDxYCHwEFDig8ZW0+U2FzPC9lbT4pZAIHDw8WBB8KBTpzdGF0b19jYWxjaWF0b3JlIHN0YXRvX2NhbGNpYXRvcmVfd2lkZ2V0IHN0YXRvLWRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAULZGlzcG9uaWJpbGVkAgkPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCCg8VAwIxMAEzATVkAgsPFgIfAQUENSwzOWQCDQ8WAh8BBQQ1LDI4ZAIPDxYCHwEFGihTUEEtPHN0cm9uZz5TYXM8L3N0cm9uZz4pZAIID2QWEgIBDxYCHw0FQnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sby13aWRnZXQtZmFudGFjYWxjaWF0b3JpIHJ1b2xvX2RpZmVuc29yZRYCAgEPFgIfAQUBRGQCAw8WAh8BBbEBPGEgaHJlZj0iL2l0L3NlcmllYS8xNjkyOC9jYWxjaWF0b3JlL2tvbGFyb3YvIiBjbGFzcz0ic3Ryb25nIGRpZmVuc29yZSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07IiB0aXRsZT0iIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iS29sYXJvdiBBLiIgPktvbGFyb3YgQS48L2E+ZAIFDxYCHwEFDig8ZW0+Um9tPC9lbT4pZAIHDw8WBB8KBTdzdGF0b19jYWxjaWF0b3JlIHN0YXRvX2NhbGNpYXRvcmVfd2lkZ2V0IHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIJDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL1NlcmJpYS5naWYWAh8MBQZTZXJiaWFkAgoPFQMCMTkCMjUCMTlkAgsPFgIfAQUENSw5NWQCDQ8WAh8BBQQ2LDQ1ZAIPDxYCHwEFGig8c3Ryb25nPlJvbTwvc3Ryb25nPi1Cb2wpZAIJD2QWEgIBDxYCHw0FQnJ1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sby13aWRnZXQtZmFudGFjYWxjaWF0b3JpIHJ1b2xvX2RpZmVuc29yZRYCAgEPFgIfAQUBRGQCAw8WAh8BBbEBPGEgaHJlZj0iL2l0L3NlcmllYS8zNTE5OC9jYWxjaWF0b3JlL3NhYmVsbGkvIiBjbGFzcz0ic3Ryb25nIGRpZmVuc29yZSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07IiB0aXRsZT0iIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iU2FiZWxsaSBTLiIgPlNhYmVsbGkgUy48L2E+ZAIFDxYCHwEFDig8ZW0+QnJlPC9lbT4pZAIHDw8WBB8KBTdzdGF0b19jYWxjaWF0b3JlIHN0YXRvX2NhbGNpYXRvcmVfd2lkZ2V0IHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIJDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAgoPFQMCMjIBNwE0ZAILDxYCHwEFBDUsODhkAg0PFgIfAQUENSw4M2QCDw8WAh8BBRooPHN0cm9uZz5CcmU8L3N0cm9uZz4tVWRpKWQCCg9kFhICAQ8WAh8NBUJydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG8td2lkZ2V0LWZhbnRhY2FsY2lhdG9yaSBydW9sb19kaWZlbnNvcmUWAgIBDxYCHwEFAURkAgMPFgIfAQW6ATxhIGhyZWY9Ii9pdC9zZXJpZWEvMjYyMTEvY2FsY2lhdG9yZS9zcGluYXp6b2xhLyIgY2xhc3M9InN0cm9uZyBkaWZlbnNvcmUiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyIgdGl0bGU9IiIgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtb3JpZ2luYWwtdGl0bGU9IlNwaW5henpvbGEgTC4iID5TcGluYXp6b2xhLi4uPC9hPmQCBQ8WAh8BBQ4oPGVtPlJvbTwvZW0+KWQCBw8PFgQfCgU3c3RhdG9fY2FsY2lhdG9yZSBzdGF0b19jYWxjaWF0b3JlX3dpZGdldCBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCCQ8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAIKDxUDAjEzAjE0ATVkAgsPFgIfAQUENiwwOGQCDQ8WAh8BBQQ2LDEzZAIPDxYCHwEFGig8c3Ryb25nPlJvbTwvc3Ryb25nPi1Cb2wpZAILD2QWEgIBDxYCHw0FR3J1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sby13aWRnZXQtZmFudGFjYWxjaWF0b3JpIHJ1b2xvX2NlbnRyb2NhbXBpc3RhFgICAQ8WAh8BBQFDZAIDDxYCHwEFtgE8YSBocmVmPSIvaXQvc2VyaWVhLzY3NzkyL2NhbGNpYXRvcmUvZ2FldGFuby8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyIgdGl0bGU9IiIgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtb3JpZ2luYWwtdGl0bGU9IkdhZXRhbm8gRy4iID5HYWV0YW5vIEcuPC9hPmQCBQ8WAh8BBQ4oPGVtPk5hcDwvZW0+KWQCBw8PFgYfCgU6c3RhdG9fY2FsY2lhdG9yZSBzdGF0b19jYWxjaWF0b3JlX3dpZGdldCBzdGF0by1kaXNwb25pYmlsZR8LAgIfA2gWBh8QBQd0b29sdGlwHxFlHwwFC2Rpc3BvbmliaWxlZAIJDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAgoPFQMBMAExATFkAgsPFgIfAQUEMCwwMGQCDQ8WAh8BBQQwLDAwZAIPDxYCHwNoZAIMD2QWEgIBDxYCHw0FR3J1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sby13aWRnZXQtZmFudGFjYWxjaWF0b3JpIHJ1b2xvX2NlbnRyb2NhbXBpc3RhFgICAQ8WAh8BBQFDZAIDDxYCHwEFsAE8YSBocmVmPSIvaXQvc2VyaWVhLzE4MjIyL2NhbGNpYXRvcmUvZ29tZXovIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiIHRpdGxlPSIiIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJHb21leiBBLiIgPkdvbWV6IEEuPC9hPmQCBQ8WAh8BBQ4oPGVtPkF0YTwvZW0+KWQCBw8PFgQfCgU3c3RhdG9fY2FsY2lhdG9yZSBzdGF0b19jYWxjaWF0b3JlX3dpZGdldCBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCCQ8PFgIfBwUeL0ltYWdlcy9iYW5kaWVyZS9BcmdlbnRpbmEuZ2lmFgIfDAUJQXJnZW50aW5hZAIKDxUDAjIxAjU0AjIxZAILDxYCHwEFBDYsNzBkAg0PFgIfAQUEOCwwMGQCDw8WAh8BBRooRmlvLTxzdHJvbmc+QXRhPC9zdHJvbmc+KWQCDQ9kFhICAQ8WAh8NBUdydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG8td2lkZ2V0LWZhbnRhY2FsY2lhdG9yaSBydW9sb19jZW50cm9jYW1waXN0YRYCAgEPFgIfAQUBQ2QCAw8WAh8BBbkBPGEgaHJlZj0iL2l0L3NlcmllYS82MTU1MC9jYWxjaWF0b3JlL2tsdWl2ZXJ0LyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07IiB0aXRsZT0iIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iS2x1aXZlcnQgSi4iID5LbHVpdmVydCBKLjwvYT5kAgUPFgIfAQUOKDxlbT5Sb208L2VtPilkAgcPDxYEHwoFN3N0YXRvX2NhbGNpYXRvcmUgc3RhdG9fY2FsY2lhdG9yZV93aWRnZXQgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgkPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvT2xhbmRhLmdpZhYCHwwFBk9sYW5kYWQCCg8VAwIxNQIxMwIxMmQCCw8WAh8BBQQ1LDkzZAINDxYCHwEFBDYsNDNkAg8PFgIfAQUaKDxzdHJvbmc+Um9tPC9zdHJvbmc+LUJvbClkAg4PZBYSAgEPFgIfDQVHcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvLXdpZGdldC1mYW50YWNhbGNpYXRvcmkgcnVvbG9fY2VudHJvY2FtcGlzdGEWAgIBDxYCHwEFAUNkAgMPFgIfAQW/ATxhIGhyZWY9Ii9pdC9zZXJpZWEvNDkxODMvY2FsY2lhdG9yZS9tYW5kcmFnb3JhLyIgY2xhc3M9InN0cm9uZyBjZW50cm9jYW1waXN0YSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07IiB0aXRsZT0iIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iTWFuZHJhZ29yYSBSLiIgPk1hbmRyYWdvcmEuLi48L2E+ZAIFDxYCHwEFDig8ZW0+VWRpPC9lbT4pZAIHDw8WBB8KBTdzdGF0b19jYWxjaWF0b3JlIHN0YXRvX2NhbGNpYXRvcmVfd2lkZ2V0IHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIJDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAgoPFQMCMjACMTABN2QCCw8WAh8BBQQ1LDg3ZAINDxYCHwEFBDUsOTJkAg8PFgIfAQUaKEJyZS08c3Ryb25nPlVkaTwvc3Ryb25nPilkAg8PZBYSAgEPFgIfDQVHcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvLXdpZGdldC1mYW50YWNhbGNpYXRvcmkgcnVvbG9fY2VudHJvY2FtcGlzdGEWAgIBDxYCHwEFAUNkAgMPFgIfAQW8ATxhIGhyZWY9Ii9pdC9zZXJpZWEvMjE0MTkvY2FsY2lhdG9yZS9taXNzaXJvbGkvIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiIHRpdGxlPSIiIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJNaXNzaXJvbGkgUy4iID5NaXNzaXJvbGkgUy48L2E+ZAIFDxYCHwEFDig8ZW0+U1BBPC9lbT4pZAIHDw8WBB8KBTdzdGF0b19jYWxjaWF0b3JlIHN0YXRvX2NhbGNpYXRvcmVfd2lkZ2V0IHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIJDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAgoPFQMCMjEBOAEzZAILDxYCHwEFBDUsODBkAg0PFgIfAQUENSw2NWQCDw8WAh8BBRooPHN0cm9uZz5TUEE8L3N0cm9uZz4tU2FzKWQCEA9kFhICAQ8WAh8NBUdydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG8td2lkZ2V0LWZhbnRhY2FsY2lhdG9yaSBydW9sb19jZW50cm9jYW1waXN0YRYCAgEPFgIfAQUBQ2QCAw8WAh8BBbMBPGEgaHJlZj0iL2l0L3NlcmllYS81MjEwNS9jYWxjaWF0b3JlL3B1bGdhci8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyIgdGl0bGU9IiIgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtb3JpZ2luYWwtdGl0bGU9IlB1bGdhciBFLiIgPlB1bGdhciBFLjwvYT5kAgUPFgIfAQUOKDxlbT5GaW88L2VtPilkAgcPDxYEHwoFN3N0YXRvX2NhbGNpYXRvcmUgc3RhdG9fY2FsY2lhdG9yZV93aWRnZXQgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgkPDxYCHwcFGS9JbWFnZXMvYmFuZGllcmUvQ2lsZS5naWYWAh8MBQRDaWxlZAIKDxUDAjIxAjE5AjE0ZAILDxYCHwEFBDUsNzBkAg0PFgIfAQUENiwxM2QCDw8WAh8BBRooPHN0cm9uZz5GaW88L3N0cm9uZz4tQXRhKWQCEQ9kFhICAQ8WAh8NBUdydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG8td2lkZ2V0LWZhbnRhY2FsY2lhdG9yaSBydW9sb19jZW50cm9jYW1waXN0YRYCAgEPFgIfAQUBQ2QCAw8WAh8BBbMBPGEgaHJlZj0iL2l0L3NlcmllYS81OTM0Mi9jYWxjaWF0b3JlL8O8bmRlci8iIGNsYXNzPSJzdHJvbmcgY2VudHJvY2FtcGlzdGEiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyIgdGl0bGU9IiIgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtb3JpZ2luYWwtdGl0bGU9IsOcbmRlciBDLiIgPsOcbmRlciBDLjwvYT5kAgUPFgIfAQUOKDxlbT5Sb208L2VtPilkAgcPDxYEHwoFN3N0YXRvX2NhbGNpYXRvcmUgc3RhdG9fY2FsY2lhdG9yZV93aWRnZXQgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgkPDxYCHwcFHC9JbWFnZXMvYmFuZGllcmUvVHVyY2hpYS5naWYWAh8MBQdUdXJjaGlhZAIKDxUDAjEwAjE1AjIzZAILDxYCHwEFBDYsMDBkAg0PFgIfAQUENiw3NWQCDw8WAh8BBRooPHN0cm9uZz5Sb208L3N0cm9uZz4tQm9sKWQCEg9kFhICAQ8WAh8NBUdydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG8td2lkZ2V0LWZhbnRhY2FsY2lhdG9yaSBydW9sb19jZW50cm9jYW1waXN0YRYCAgEPFgIfAQUBQ2QCAw8WAh8BBb8BPGEgaHJlZj0iL2l0L3NlcmllYS82OTI5Ny9jYWxjaWF0b3JlL3ZpZWlyYV9uYW4vIiBjbGFzcz0ic3Ryb25nIGNlbnRyb2NhbXBpc3RhIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiIHRpdGxlPSIiIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJWaWVpcmEgTmFuIFIuIiA+VmllaXJhIE5hbi4uLjwvYT5kAgUPFgIfAQUOKDxlbT5TYW08L2VtPilkAgcPDxYEHwoFN3N0YXRvX2NhbGNpYXRvcmUgc3RhdG9fY2FsY2lhdG9yZV93aWRnZXQgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgkPDxYCHwcFIC9JbWFnZXMvYmFuZGllcmUvSW5naGlsdGVycmEuZ2lmFgIfDAULSW5naGlsdGVycmFkAgoPFQMCMTkBMwEyZAILDxYCHwEFBDUsOTdkAg0PFgIfAQUENSw3OGQCDw8WAh8BBRooVG9yLTxzdHJvbmc+U2FtPC9zdHJvbmc+KWQCEw9kFhICAQ8WAh8NBUNydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG8td2lkZ2V0LWZhbnRhY2FsY2lhdG9yaSBydW9sb19hdHRhY2NhbnRlFgICAQ8WAh8BBQFBZAIDDxYCHwEFsgE8YSBocmVmPSIvaXQvc2VyaWVhLzIxMDYyL2NhbGNpYXRvcmUvYmVsb3R0aS8iIGNsYXNzPSJzdHJvbmcgYXR0YWNjYW50ZSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07IiB0aXRsZT0iIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iQmVsb3R0aSBBLiIgPkJlbG90dGkgQS48L2E+ZAIFDxYCHwEFDig8ZW0+VG9yPC9lbT4pZAIHDw8WBB8KBTdzdGF0b19jYWxjaWF0b3JlIHN0YXRvX2NhbGNpYXRvcmVfd2lkZ2V0IHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIJDw8WAh8HBRsvSW1hZ2VzL2JhbmRpZXJlL0l0YWxpYS5naWYWAh8MBQZJdGFsaWFkAgoPFQMCMTkCNDQCMzVkAgsPFgIfAQUENiwzNmQCDQ8WAh8BBQQ4LDAzZAIPDxYCHwEFGig8c3Ryb25nPlRvcjwvc3Ryb25nPi1TYW0pZAIUD2QWEgIBDxYCHw0FQ3J1b2xvLWZhbnRhY2FsY2lhdG9yZSBydW9sby13aWRnZXQtZmFudGFjYWxjaWF0b3JpIHJ1b2xvX2F0dGFjY2FudGUWAgIBDxYCHwEFAUFkAgMPFgIfAQWyATxhIGhyZWY9Ii9pdC9zZXJpZWEvMzUwNTkvY2FsY2lhdG9yZS9iZXJhcmRpLyIgY2xhc3M9InN0cm9uZyBhdHRhY2NhbnRlIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiIHRpdGxlPSIiIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJCZXJhcmRpIEQuIiA+QmVyYXJkaSBELjwvYT5kAgUPFgIfAQUOKDxlbT5TYXM8L2VtPilkAgcPDxYEHwoFN3N0YXRvX2NhbGNpYXRvcmUgc3RhdG9fY2FsY2lhdG9yZV93aWRnZXQgc3RhdG8tdGl0b2xhcmUfCwICFgYfEAUHdG9vbHRpcB8RZR8MBRJwcm9iYWJpbGUgdGl0b2xhcmVkAgkPDxYCHwcFGy9JbWFnZXMvYmFuZGllcmUvSXRhbGlhLmdpZhYCHwwFBkl0YWxpYWQCCg8VAwIxNwIzMgIxNmQCCw8WAh8BBQQ2LDU2ZAINDxYCHwEFBDgsMjJkAg8PFgIfAQUaKFNQQS08c3Ryb25nPlNhczwvc3Ryb25nPilkAhUPZBYSAgEPFgIfDQVDcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvLXdpZGdldC1mYW50YWNhbGNpYXRvcmkgcnVvbG9fYXR0YWNjYW50ZRYCAgEPFgIfAQUBQWQCAw8WAh8BBawBPGEgaHJlZj0iL2l0L3NlcmllYS80MDA5MS9jYWxjaWF0b3JlL2NlcnJpLyIgY2xhc3M9InN0cm9uZyBhdHRhY2NhbnRlIiBzdHlsZT0iZm9udC1zaXplOiAxLjJlbTsiIHRpdGxlPSIiIGRhdGEtdG9nZ2xlPSJ0b29sdGlwIiBkYXRhLW9yaWdpbmFsLXRpdGxlPSJDZXJyaSBBLiIgPkNlcnJpIEEuPC9hPmQCBQ8WAh8BBQ4oPGVtPlNQQTwvZW0+KWQCBw8PFgQfCgU8c3RhdG9fY2FsY2lhdG9yZSBzdGF0b19jYWxjaWF0b3JlX3dpZGdldCBzdGF0by1pbmRpc3BvbmliaWxlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUNaW5kaXNwb25pYmlsZWQCCQ8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAIKDxUDATgBNQEzZAILDxYCHwEFBDUsODFkAg0PFgIfAQUENiwyNWQCDw8WAh8BBRooPHN0cm9uZz5TUEE8L3N0cm9uZz4tU2FzKWQCFg9kFhICAQ8WAh8NBUNydW9sby1mYW50YWNhbGNpYXRvcmUgcnVvbG8td2lkZ2V0LWZhbnRhY2FsY2lhdG9yaSBydW9sb19hdHRhY2NhbnRlFgICAQ8WAh8BBQFBZAIDDxYCHwEFsgE8YSBocmVmPSIvaXQvc2VyaWVhLzE4Mjg5L2NhbGNpYXRvcmUvcGFsYWNpby8iIGNsYXNzPSJzdHJvbmcgYXR0YWNjYW50ZSIgc3R5bGU9ImZvbnQtc2l6ZTogMS4yZW07IiB0aXRsZT0iIiBkYXRhLXRvZ2dsZT0idG9vbHRpcCIgZGF0YS1vcmlnaW5hbC10aXRsZT0iUGFsYWNpbyBSLiIgPlBhbGFjaW8gUi48L2E+ZAIFDxYCHwEFDig8ZW0+Qm9sPC9lbT4pZAIHDw8WBB8KBTdzdGF0b19jYWxjaWF0b3JlIHN0YXRvX2NhbGNpYXRvcmVfd2lkZ2V0IHN0YXRvLXRpdG9sYXJlHwsCAhYGHxAFB3Rvb2x0aXAfEWUfDAUScHJvYmFiaWxlIHRpdG9sYXJlZAIJDw8WAh8HBR4vSW1hZ2VzL2JhbmRpZXJlL0FyZ2VudGluYS5naWYWAh8MBQlBcmdlbnRpbmFkAgoPFQMCMjACMjQBNmQCCw8WAh8BBQQ2LDE5ZAINDxYCHwEFBDcsMDZkAg8PFgIfAQUaKFJvbS08c3Ryb25nPkJvbDwvc3Ryb25nPilkAhcPZBYSAgEPFgIfDQVDcnVvbG8tZmFudGFjYWxjaWF0b3JlIHJ1b2xvLXdpZGdldC1mYW50YWNhbGNpYXRvcmkgcnVvbG9fYXR0YWNjYW50ZRYCAgEPFgIfAQUBQWQCAw8WAh8BBbIBPGEgaHJlZj0iL2l0L3NlcmllYS8yMTEyNC9jYWxjaWF0b3JlL3NhbnNvbmUvIiBjbGFzcz0ic3Ryb25nIGF0dGFjY2FudGUiIHN0eWxlPSJmb250LXNpemU6IDEuMmVtOyIgdGl0bGU9IiIgZGF0YS10b2dnbGU9InRvb2x0aXAiIGRhdGEtb3JpZ2luYWwtdGl0bGU9IlNhbnNvbmUgTi4iID5TYW5zb25lIE4uPC9hPmQCBQ8WAh8BBQ4oPGVtPkJvbDwvZW0+KWQCBw8PFgQfCgU3c3RhdG9fY2FsY2lhdG9yZSBzdGF0b19jYWxjaWF0b3JlX3dpZGdldCBzdGF0by10aXRvbGFyZR8LAgIWBh8QBQd0b29sdGlwHxFlHwwFEnByb2JhYmlsZSB0aXRvbGFyZWQCCQ8PFgIfBwUbL0ltYWdlcy9iYW5kaWVyZS9JdGFsaWEuZ2lmFgIfDAUGSXRhbGlhZAIKDxUDAjIwAjE0AThkAgsPFgIfAQUENSw4MGQCDQ8WAh8BBQQ2LDI4ZAIPDxYCHwEFGihSb20tPHN0cm9uZz5Cb2w8L3N0cm9uZz4pZAIRDxYCHwEFNyA8c3BhbiBjbGFzcz0idGV4dC1zbWFsbCB0ZXh0LWRhcmsiPiAtIDEwLjAuMC40ODwvc3Bhbj5kZIZPkqtzMrAA15qW8TTbi4zM48us'
	}

req_text_p = requests.post(urlP, cookies = cookies, data=payload).text
soup = bs4.BeautifulSoup(req_text_p, 'html.parser')
tableSvincolati = soup.find(id='MainContent_wuc_OffertaPubblica_upListaSvincolati')
allP = tableSvincolati.find_all('td', attrs={'class': 'info-fantacalciatore'})
for player in allP:
	print(player.find('a').text)